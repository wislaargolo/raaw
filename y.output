Grammar

    0 $accept: program $end

    1 program: declarations subprograms

    2 declarations: ε
    3             | declarations declaration

    4 declaration: var_declaration
    5            | const_declaration
    6            | type_declaration

    7 var_declaration: type declaration_line SEMICOLON

    8 const_declaration: CONST var_declaration

    9 type_declaration: TYPE ID ASSIGNMENT type SEMICOLON

   10 declaration_line: declaration_item
   11                 | declaration_line COMMA declaration_item

   12 declaration_item: declaration_term
   13                 | declaration_term ASSIGNMENT initialization

   14 declaration_term: ID
   15                 | declaration_term LBRACKET expr RBRACKET

   16 initialization: expr
   17               | LBRACE initialization_list RBRACE
   18               | allocation

   19 initialization_list: initialization
   20                    | initialization_list COMMA initialization

   21 allocation: NEW type LBRACKET expr RBRACKET

   22 type: PRIM_TYPE
   23     | ptr_type
   24     | enum_type
   25     | struct_type
   26     | map_type
   27     | list_type
   28     | ID

   29 ptr_type: PTR ABRACKET_OPEN type ABRACKET_CLOSE

   30 map_type: MAP ABRACKET_OPEN type COMMA type ABRACKET_CLOSE

   31 list_type: LIST ABRACKET_OPEN type ABRACKET_CLOSE

   32 enum_type: ENUM LBRACE enum_list RBRACE

   33 enum_list: ID
   34          | enum_list COMMA ID

   35 struct_type: STRUCT LBRACE struct_vars RBRACE

   36 struct_vars: var_declaration
   37            | struct_vars var_declaration

   38 subprograms: subprogram
   39            | subprograms subprogram

   40 subprogram: type ID LPAREN parameters RPAREN LBRACE statements RBRACE
   41           | VOID ID LPAREN parameters RPAREN LBRACE statements RBRACE
   42           | type ID LPAREN RPAREN LBRACE statements RBRACE
   43           | VOID ID LPAREN RPAREN LBRACE statements RBRACE

   44 parameters: parameter
   45           | parameters COMMA parameter

   46 parameter: type ID

   47 statements: statement
   48           | statements statement

   49 statement: var_declaration
   50          | const_declaration
   51          | command
   52          | assignment_command

   53 command: if
   54        | while
   55        | do_while
   56        | for
   57        | switch
   58        | function_call SEMICOLON
   59        | jump SEMICOLON
   60        | deletion

   61 jump: CONTINUE
   62     | BREAK
   63     | return

   64 return: RETURN return_value

   65 return_value: ε
   66             | expr

   67 if: IF LPAREN expr RPAREN LBRACE statements RBRACE else_ifs_opt else_opt

   68 else_ifs_opt: ε
   69             | else_ifs

   70 else_ifs: else_if
   71         | else_ifs else_if

   72 else_if: ELSEIF LPAREN expr RPAREN LBRACE statements RBRACE

   73 else_opt: ε
   74         | else

   75 else: ELSE LBRACE statements RBRACE

   76 while: WHILE LPAREN expr RPAREN LBRACE statements RBRACE

   77 do_while: DO LBRACE statements RBRACE WHILE LPAREN expr RPAREN

   78 for: FOR LPAREN for_init expr SEMICOLON assignment RPAREN LBRACE statements RBRACE

   79 for_init: assignment_command
   80         | var_declaration

   81 switch: SWITCH LPAREN expr RPAREN LBRACE cases RBRACE
   82       | SWITCH LPAREN expr RPAREN LBRACE cases default RBRACE

   83 cases: case
   84      | cases case

   85 case: CASE case_item

   86 default: DEFAULT COLON statements

   87 case_item: expr COLON statements

   88 function_call: ID LPAREN RPAREN
   89              | ID LPAREN parameters_call RPAREN

   90 parameters_call: expr
   91                | parameters_call COMMA expr

   92 assignment: assignable assignment_operator assignment_expr

   93 assignment_command: assignment SEMICOLON

   94 assignable: identifier_ref
   95           | val

   96 val: VAL LPAREN target RPAREN

   97 assignment_operator: ASSIGNMENT
   98                    | ASSIGNMENT_MUL
   99                    | ASSIGNMENT_DIV
  100                    | ASSIGNMENT_MOD
  101                    | ASSIGNMENT_ADD
  102                    | ASSIGNMENT_SUB

  103 assignment_expr: expr
  104                | allocation

  105 deletion: DELETE LPAREN identifier_ref RPAREN SEMICOLON

  106 identifier_ref: ID
  107               | identifier_ref LBRACKET expr RBRACKET
  108               | identifier_ref DOT ID

  109 expr: or_expr

  110 or_expr: and_expr
  111        | or_expr or_operator and_expr

  112 or_operator: OR
  113            | ORC

  114 and_expr: eq_expr
  115         | and_expr and_operator eq_expr

  116 and_operator: AND
  117             | ANDC

  118 eq_expr: relational_expr
  119        | eq_expr eq_operator relational_expr

  120 eq_operator: EQUALITY
  121            | DIFFERENCE

  122 relational_expr: arithmetic_expr
  123                | relational_expr ineq_operator arithmetic_expr

  124 ineq_operator: ABRACKET_OPEN
  125              | MORE_THAN_EQUALS
  126              | ABRACKET_CLOSE
  127              | LESS_THAN_EQUALS

  128 arithmetic_expr: term
  129                | arithmetic_expr add_operator term

  130 add_operator: PLUS
  131             | MINUS

  132 term: prefix_expr
  133     | term mult_operator prefix_expr

  134 mult_operator: TIMES
  135              | SLASH
  136              | MOD

  137 prefix_expr: postfix_expr
  138            | unary_operator postfix_expr
  139            | REF LPAREN identifier_ref RPAREN
  140            | cast

  141 cast: LPAREN PRIM_TYPE RPAREN postfix_expr

  142 unary_operator: PLUS
  143               | MINUS
  144               | NOT

  145 postfix_expr: target
  146             | literal

  147 base: ID
  148     | val
  149     | LPAREN expr RPAREN

  150 target: base
  151       | function_call
  152       | target LBRACKET expr RBRACKET
  153       | target DOT ID

  154 literal: INTEGER
  155        | CHAR
  156        | STRING
  157        | REAL
  158        | BOOL


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sValue> (258) 9 14 28 33 34 40 41 42 43 46 88 89 106 108 147 153
    PRIM_TYPE <sValue> (259) 22 141
    INTEGER <sValue> (260) 154
    STRING <sValue> (261) 156
    BOOL <sValue> (262) 158
    REAL <sValue> (263) 157
    CHAR <cValue> (264) 155
    IF (265) 67
    ELSE (266) 75
    ELSEIF (267) 72
    SWITCH (268) 81 82
    CASE (269) 85
    DEFAULT (270) 86
    DO (271) 77
    WHILE (272) 76 77
    FOR (273) 78
    BREAK (274) 62
    CONTINUE (275) 61
    RETURN (276) 64
    NEW (277) 21
    DELETE (278) 105
    REF (279) 139
    VAL (280) 96
    CONST (281) 8
    VOID (282) 41 43
    STRUCT (283) 35
    ENUM (284) 32
    PTR (285) 29
    LIST (286) 31
    MAP (287) 30
    TYPE (288) 9
    LPAREN (289) 40 41 42 43 67 72 76 77 78 81 82 88 89 96 105 139 141 149
    RPAREN (290) 40 41 42 43 67 72 76 77 78 81 82 88 89 96 105 139 141 149
    LBRACE (291) 17 32 35 40 41 42 43 67 72 75 76 77 78 81 82
    RBRACE (292) 17 32 35 40 41 42 43 67 72 75 76 77 78 81 82
    LBRACKET (293) 15 21 107 152
    RBRACKET (294) 15 21 107 152
    SEMICOLON (295) 7 9 58 59 78 93 105
    COLON (296) 86 87
    COMMA (297) 11 20 30 34 45 91
    DOT (298) 108 153
    EQUALITY (299) 120
    DIFFERENCE (300) 121
    ABRACKET_OPEN (301) 29 30 31 124
    ABRACKET_CLOSE (302) 29 30 31 126
    LESS_THAN_EQUALS (303) 127
    MORE_THAN_EQUALS (304) 125
    ASSIGNMENT (305) 9 13 97
    ASSIGNMENT_MUL (306) 98
    ASSIGNMENT_DIV (307) 99
    ASSIGNMENT_MOD (308) 100
    ASSIGNMENT_ADD (309) 101
    ASSIGNMENT_SUB (310) 102
    AND (311) 116
    ANDC (312) 117
    OR (313) 112
    ORC (314) 113
    NOT (315) 144
    PLUS (316) 130 142
    MINUS (317) 131 143
    TIMES (318) 134
    SLASH (319) 135
    MOD (320) 136


Nonterminals, with rules where they appear

    $accept (66)
        on left: 0
    program (67)
        on left: 1
        on right: 0
    declarations (68)
        on left: 2 3
        on right: 1 3
    declaration (69)
        on left: 4 5 6
        on right: 3
    var_declaration (70)
        on left: 7
        on right: 4 8 36 37 49 80
    const_declaration (71)
        on left: 8
        on right: 5 50
    type_declaration (72)
        on left: 9
        on right: 6
    declaration_line (73)
        on left: 10 11
        on right: 7 11
    declaration_item (74)
        on left: 12 13
        on right: 10 11
    declaration_term (75)
        on left: 14 15
        on right: 12 13 15
    initialization (76)
        on left: 16 17 18
        on right: 13 19 20
    initialization_list (77)
        on left: 19 20
        on right: 17 20
    allocation (78)
        on left: 21
        on right: 18 104
    type <sValue> (79)
        on left: 22 23 24 25 26 27 28
        on right: 7 9 21 29 30 31 40 42 46
    ptr_type (80)
        on left: 29
        on right: 23
    map_type (81)
        on left: 30
        on right: 26
    list_type (82)
        on left: 31
        on right: 27
    enum_type (83)
        on left: 32
        on right: 24
    enum_list (84)
        on left: 33 34
        on right: 32 34
    struct_type (85)
        on left: 35
        on right: 25
    struct_vars (86)
        on left: 36 37
        on right: 35 37
    subprograms (87)
        on left: 38 39
        on right: 1 39
    subprogram (88)
        on left: 40 41 42 43
        on right: 38 39
    parameters (89)
        on left: 44 45
        on right: 40 41 45
    parameter (90)
        on left: 46
        on right: 44 45
    statements (91)
        on left: 47 48
        on right: 40 41 42 43 48 67 72 75 76 77 78 86 87
    statement (92)
        on left: 49 50 51 52
        on right: 47 48
    command (93)
        on left: 53 54 55 56 57 58 59 60
        on right: 51
    jump (94)
        on left: 61 62 63
        on right: 59
    return (95)
        on left: 64
        on right: 63
    return_value (96)
        on left: 65 66
        on right: 64
    if (97)
        on left: 67
        on right: 53
    else_ifs_opt (98)
        on left: 68 69
        on right: 67
    else_ifs (99)
        on left: 70 71
        on right: 69 71
    else_if (100)
        on left: 72
        on right: 70 71
    else_opt (101)
        on left: 73 74
        on right: 67
    else (102)
        on left: 75
        on right: 74
    while (103)
        on left: 76
        on right: 54
    do_while (104)
        on left: 77
        on right: 55
    for (105)
        on left: 78
        on right: 56
    for_init (106)
        on left: 79 80
        on right: 78
    switch (107)
        on left: 81 82
        on right: 57
    cases (108)
        on left: 83 84
        on right: 81 82 84
    case (109)
        on left: 85
        on right: 83 84
    default (110)
        on left: 86
        on right: 82
    case_item (111)
        on left: 87
        on right: 85
    function_call (112)
        on left: 88 89
        on right: 58 151
    parameters_call (113)
        on left: 90 91
        on right: 89 91
    assignment (114)
        on left: 92
        on right: 78 93
    assignment_command (115)
        on left: 93
        on right: 52 79
    assignable (116)
        on left: 94 95
        on right: 92
    val (117)
        on left: 96
        on right: 95 148
    assignment_operator (118)
        on left: 97 98 99 100 101 102
        on right: 92
    assignment_expr (119)
        on left: 103 104
        on right: 92
    deletion (120)
        on left: 105
        on right: 60
    identifier_ref (121)
        on left: 106 107 108
        on right: 94 105 107 108 139
    expr (122)
        on left: 109
        on right: 15 16 21 66 67 72 76 77 78 81 82 87 90 91 103 107 149 152
    or_expr (123)
        on left: 110 111
        on right: 109 111
    or_operator (124)
        on left: 112 113
        on right: 111
    and_expr (125)
        on left: 114 115
        on right: 110 111 115
    and_operator (126)
        on left: 116 117
        on right: 115
    eq_expr (127)
        on left: 118 119
        on right: 114 115 119
    eq_operator (128)
        on left: 120 121
        on right: 119
    relational_expr (129)
        on left: 122 123
        on right: 118 119 123
    ineq_operator (130)
        on left: 124 125 126 127
        on right: 123
    arithmetic_expr (131)
        on left: 128 129
        on right: 122 123 129
    add_operator (132)
        on left: 130 131
        on right: 129
    term (133)
        on left: 132 133
        on right: 128 129 133
    mult_operator (134)
        on left: 134 135 136
        on right: 133
    prefix_expr (135)
        on left: 137 138 139 140
        on right: 132 133
    cast (136)
        on left: 141
        on right: 140
    unary_operator (137)
        on left: 142 143 144
        on right: 138
    postfix_expr (138)
        on left: 145 146
        on right: 137 138 141
    base (139)
        on left: 147 148 149
        on right: 150
    target (140)
        on left: 150 151 152 153
        on right: 96 145 152 153
    literal (141)
        on left: 154 155 156 157 158
        on right: 146


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (declarations)

    program       go to state 1
    declarations  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: declarations • subprograms
    3 declarations: declarations • declaration

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    CONST      shift, and go to state 6
    VOID       shift, and go to state 7
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    TYPE       shift, and go to state 13

    declaration        go to state 14
    var_declaration    go to state 15
    const_declaration  go to state 16
    type_declaration   go to state 17
    type               go to state 18
    ptr_type           go to state 19
    map_type           go to state 20
    list_type          go to state 21
    enum_type          go to state 22
    struct_type        go to state 23
    subprograms        go to state 24
    subprogram         go to state 25


State 3

    0 $accept: program $end •

    $default  accept


State 4

   28 type: ID •

    $default  reduce using rule 28 (type)


State 5

   22 type: PRIM_TYPE •

    $default  reduce using rule 22 (type)


State 6

    8 const_declaration: CONST • var_declaration

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration  go to state 26
    type             go to state 27
    ptr_type         go to state 19
    map_type         go to state 20
    list_type        go to state 21
    enum_type        go to state 22
    struct_type      go to state 23


State 7

   41 subprogram: VOID • ID LPAREN parameters RPAREN LBRACE statements RBRACE
   43           | VOID • ID LPAREN RPAREN LBRACE statements RBRACE

    ID  shift, and go to state 28


State 8

   35 struct_type: STRUCT • LBRACE struct_vars RBRACE

    LBRACE  shift, and go to state 29


State 9

   32 enum_type: ENUM • LBRACE enum_list RBRACE

    LBRACE  shift, and go to state 30


State 10

   29 ptr_type: PTR • ABRACKET_OPEN type ABRACKET_CLOSE

    ABRACKET_OPEN  shift, and go to state 31


State 11

   31 list_type: LIST • ABRACKET_OPEN type ABRACKET_CLOSE

    ABRACKET_OPEN  shift, and go to state 32


State 12

   30 map_type: MAP • ABRACKET_OPEN type COMMA type ABRACKET_CLOSE

    ABRACKET_OPEN  shift, and go to state 33


State 13

    9 type_declaration: TYPE • ID ASSIGNMENT type SEMICOLON

    ID  shift, and go to state 34


State 14

    3 declarations: declarations declaration •

    $default  reduce using rule 3 (declarations)


State 15

    4 declaration: var_declaration •

    $default  reduce using rule 4 (declaration)


State 16

    5 declaration: const_declaration •

    $default  reduce using rule 5 (declaration)


State 17

    6 declaration: type_declaration •

    $default  reduce using rule 6 (declaration)


State 18

    7 var_declaration: type • declaration_line SEMICOLON
   40 subprogram: type • ID LPAREN parameters RPAREN LBRACE statements RBRACE
   42           | type • ID LPAREN RPAREN LBRACE statements RBRACE

    ID  shift, and go to state 35

    declaration_line  go to state 36
    declaration_item  go to state 37
    declaration_term  go to state 38


State 19

   23 type: ptr_type •

    $default  reduce using rule 23 (type)


State 20

   26 type: map_type •

    $default  reduce using rule 26 (type)


State 21

   27 type: list_type •

    $default  reduce using rule 27 (type)


State 22

   24 type: enum_type •

    $default  reduce using rule 24 (type)


State 23

   25 type: struct_type •

    $default  reduce using rule 25 (type)


State 24

    1 program: declarations subprograms •
   39 subprograms: subprograms • subprogram

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    VOID       shift, and go to state 7
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    $default  reduce using rule 1 (program)

    type         go to state 39
    ptr_type     go to state 19
    map_type     go to state 20
    list_type    go to state 21
    enum_type    go to state 22
    struct_type  go to state 23
    subprogram   go to state 40


State 25

   38 subprograms: subprogram •

    $default  reduce using rule 38 (subprograms)


State 26

    8 const_declaration: CONST var_declaration •

    $default  reduce using rule 8 (const_declaration)


State 27

    7 var_declaration: type • declaration_line SEMICOLON

    ID  shift, and go to state 41

    declaration_line  go to state 36
    declaration_item  go to state 37
    declaration_term  go to state 38


State 28

   41 subprogram: VOID ID • LPAREN parameters RPAREN LBRACE statements RBRACE
   43           | VOID ID • LPAREN RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 42


State 29

   35 struct_type: STRUCT LBRACE • struct_vars RBRACE

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration  go to state 43
    type             go to state 27
    ptr_type         go to state 19
    map_type         go to state 20
    list_type        go to state 21
    enum_type        go to state 22
    struct_type      go to state 23
    struct_vars      go to state 44


State 30

   32 enum_type: ENUM LBRACE • enum_list RBRACE

    ID  shift, and go to state 45

    enum_list  go to state 46


State 31

   29 ptr_type: PTR ABRACKET_OPEN • type ABRACKET_CLOSE

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    type         go to state 47
    ptr_type     go to state 19
    map_type     go to state 20
    list_type    go to state 21
    enum_type    go to state 22
    struct_type  go to state 23


State 32

   31 list_type: LIST ABRACKET_OPEN • type ABRACKET_CLOSE

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    type         go to state 48
    ptr_type     go to state 19
    map_type     go to state 20
    list_type    go to state 21
    enum_type    go to state 22
    struct_type  go to state 23


State 33

   30 map_type: MAP ABRACKET_OPEN • type COMMA type ABRACKET_CLOSE

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    type         go to state 49
    ptr_type     go to state 19
    map_type     go to state 20
    list_type    go to state 21
    enum_type    go to state 22
    struct_type  go to state 23


State 34

    9 type_declaration: TYPE ID • ASSIGNMENT type SEMICOLON

    ASSIGNMENT  shift, and go to state 50


State 35

   14 declaration_term: ID •
   40 subprogram: type ID • LPAREN parameters RPAREN LBRACE statements RBRACE
   42           | type ID • LPAREN RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 51

    $default  reduce using rule 14 (declaration_term)


State 36

    7 var_declaration: type declaration_line • SEMICOLON
   11 declaration_line: declaration_line • COMMA declaration_item

    SEMICOLON  shift, and go to state 52
    COMMA      shift, and go to state 53


State 37

   10 declaration_line: declaration_item •

    $default  reduce using rule 10 (declaration_line)


State 38

   12 declaration_item: declaration_term •
   13                 | declaration_term • ASSIGNMENT initialization
   15 declaration_term: declaration_term • LBRACKET expr RBRACKET

    LBRACKET    shift, and go to state 54
    ASSIGNMENT  shift, and go to state 55

    $default  reduce using rule 12 (declaration_item)


State 39

   40 subprogram: type • ID LPAREN parameters RPAREN LBRACE statements RBRACE
   42           | type • ID LPAREN RPAREN LBRACE statements RBRACE

    ID  shift, and go to state 56


State 40

   39 subprograms: subprograms subprogram •

    $default  reduce using rule 39 (subprograms)


State 41

   14 declaration_term: ID •

    $default  reduce using rule 14 (declaration_term)


State 42

   41 subprogram: VOID ID LPAREN • parameters RPAREN LBRACE statements RBRACE
   43           | VOID ID LPAREN • RPAREN LBRACE statements RBRACE

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    RPAREN     shift, and go to state 57

    type         go to state 58
    ptr_type     go to state 19
    map_type     go to state 20
    list_type    go to state 21
    enum_type    go to state 22
    struct_type  go to state 23
    parameters   go to state 59
    parameter    go to state 60


State 43

   36 struct_vars: var_declaration •

    $default  reduce using rule 36 (struct_vars)


State 44

   35 struct_type: STRUCT LBRACE struct_vars • RBRACE
   37 struct_vars: struct_vars • var_declaration

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    RBRACE     shift, and go to state 61

    var_declaration  go to state 62
    type             go to state 27
    ptr_type         go to state 19
    map_type         go to state 20
    list_type        go to state 21
    enum_type        go to state 22
    struct_type      go to state 23


State 45

   33 enum_list: ID •

    $default  reduce using rule 33 (enum_list)


State 46

   32 enum_type: ENUM LBRACE enum_list • RBRACE
   34 enum_list: enum_list • COMMA ID

    RBRACE  shift, and go to state 63
    COMMA   shift, and go to state 64


State 47

   29 ptr_type: PTR ABRACKET_OPEN type • ABRACKET_CLOSE

    ABRACKET_CLOSE  shift, and go to state 65


State 48

   31 list_type: LIST ABRACKET_OPEN type • ABRACKET_CLOSE

    ABRACKET_CLOSE  shift, and go to state 66


State 49

   30 map_type: MAP ABRACKET_OPEN type • COMMA type ABRACKET_CLOSE

    COMMA  shift, and go to state 67


State 50

    9 type_declaration: TYPE ID ASSIGNMENT • type SEMICOLON

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    type         go to state 68
    ptr_type     go to state 19
    map_type     go to state 20
    list_type    go to state 21
    enum_type    go to state 22
    struct_type  go to state 23


State 51

   40 subprogram: type ID LPAREN • parameters RPAREN LBRACE statements RBRACE
   42           | type ID LPAREN • RPAREN LBRACE statements RBRACE

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    RPAREN     shift, and go to state 69

    type         go to state 58
    ptr_type     go to state 19
    map_type     go to state 20
    list_type    go to state 21
    enum_type    go to state 22
    struct_type  go to state 23
    parameters   go to state 70
    parameter    go to state 60


State 52

    7 var_declaration: type declaration_line SEMICOLON •

    $default  reduce using rule 7 (var_declaration)


State 53

   11 declaration_line: declaration_line COMMA • declaration_item

    ID  shift, and go to state 41

    declaration_item  go to state 71
    declaration_term  go to state 38


State 54

   15 declaration_term: declaration_term LBRACKET • expr RBRACKET

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    expr             go to state 86
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 55

   13 declaration_item: declaration_term ASSIGNMENT • initialization

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    NEW      shift, and go to state 100
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    LBRACE   shift, and go to state 101
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    initialization   go to state 102
    allocation       go to state 103
    function_call    go to state 84
    val              go to state 85
    expr             go to state 104
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 56

   40 subprogram: type ID • LPAREN parameters RPAREN LBRACE statements RBRACE
   42           | type ID • LPAREN RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 51


State 57

   43 subprogram: VOID ID LPAREN RPAREN • LBRACE statements RBRACE

    LBRACE  shift, and go to state 105


State 58

   46 parameter: type • ID

    ID  shift, and go to state 106


State 59

   41 subprogram: VOID ID LPAREN parameters • RPAREN LBRACE statements RBRACE
   45 parameters: parameters • COMMA parameter

    RPAREN  shift, and go to state 107
    COMMA   shift, and go to state 108


State 60

   44 parameters: parameter •

    $default  reduce using rule 44 (parameters)


State 61

   35 struct_type: STRUCT LBRACE struct_vars RBRACE •

    $default  reduce using rule 35 (struct_type)


State 62

   37 struct_vars: struct_vars var_declaration •

    $default  reduce using rule 37 (struct_vars)


State 63

   32 enum_type: ENUM LBRACE enum_list RBRACE •

    $default  reduce using rule 32 (enum_type)


State 64

   34 enum_list: enum_list COMMA • ID

    ID  shift, and go to state 109


State 65

   29 ptr_type: PTR ABRACKET_OPEN type ABRACKET_CLOSE •

    $default  reduce using rule 29 (ptr_type)


State 66

   31 list_type: LIST ABRACKET_OPEN type ABRACKET_CLOSE •

    $default  reduce using rule 31 (list_type)


State 67

   30 map_type: MAP ABRACKET_OPEN type COMMA • type ABRACKET_CLOSE

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    type         go to state 110
    ptr_type     go to state 19
    map_type     go to state 20
    list_type    go to state 21
    enum_type    go to state 22
    struct_type  go to state 23


State 68

    9 type_declaration: TYPE ID ASSIGNMENT type • SEMICOLON

    SEMICOLON  shift, and go to state 111


State 69

   42 subprogram: type ID LPAREN RPAREN • LBRACE statements RBRACE

    LBRACE  shift, and go to state 112


State 70

   40 subprogram: type ID LPAREN parameters • RPAREN LBRACE statements RBRACE
   45 parameters: parameters • COMMA parameter

    RPAREN  shift, and go to state 113
    COMMA   shift, and go to state 108


State 71

   11 declaration_line: declaration_line COMMA declaration_item •

    $default  reduce using rule 11 (declaration_line)


State 72

   88 function_call: ID • LPAREN RPAREN
   89              | ID • LPAREN parameters_call RPAREN
  147 base: ID •

    LPAREN  shift, and go to state 114

    $default  reduce using rule 147 (base)


State 73

  154 literal: INTEGER •

    $default  reduce using rule 154 (literal)


State 74

  156 literal: STRING •

    $default  reduce using rule 156 (literal)


State 75

  158 literal: BOOL •

    $default  reduce using rule 158 (literal)


State 76

  157 literal: REAL •

    $default  reduce using rule 157 (literal)


State 77

  155 literal: CHAR •

    $default  reduce using rule 155 (literal)


State 78

  139 prefix_expr: REF • LPAREN identifier_ref RPAREN

    LPAREN  shift, and go to state 115


State 79

   96 val: VAL • LPAREN target RPAREN

    LPAREN  shift, and go to state 116


State 80

  141 cast: LPAREN • PRIM_TYPE RPAREN postfix_expr
  149 base: LPAREN • expr RPAREN

    ID         shift, and go to state 72
    PRIM_TYPE  shift, and go to state 117
    INTEGER    shift, and go to state 73
    STRING     shift, and go to state 74
    BOOL       shift, and go to state 75
    REAL       shift, and go to state 76
    CHAR       shift, and go to state 77
    REF        shift, and go to state 78
    VAL        shift, and go to state 79
    LPAREN     shift, and go to state 80
    NOT        shift, and go to state 81
    PLUS       shift, and go to state 82
    MINUS      shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    expr             go to state 118
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 81

  144 unary_operator: NOT •

    $default  reduce using rule 144 (unary_operator)


State 82

  142 unary_operator: PLUS •

    $default  reduce using rule 142 (unary_operator)


State 83

  143 unary_operator: MINUS •

    $default  reduce using rule 143 (unary_operator)


State 84

  151 target: function_call •

    $default  reduce using rule 151 (target)


State 85

  148 base: val •

    $default  reduce using rule 148 (base)


State 86

   15 declaration_term: declaration_term LBRACKET expr • RBRACKET

    RBRACKET  shift, and go to state 119


State 87

  109 expr: or_expr •
  111 or_expr: or_expr • or_operator and_expr

    OR   shift, and go to state 120
    ORC  shift, and go to state 121

    $default  reduce using rule 109 (expr)

    or_operator  go to state 122


State 88

  110 or_expr: and_expr •
  115 and_expr: and_expr • and_operator eq_expr

    AND   shift, and go to state 123
    ANDC  shift, and go to state 124

    $default  reduce using rule 110 (or_expr)

    and_operator  go to state 125


State 89

  114 and_expr: eq_expr •
  119 eq_expr: eq_expr • eq_operator relational_expr

    EQUALITY    shift, and go to state 126
    DIFFERENCE  shift, and go to state 127

    $default  reduce using rule 114 (and_expr)

    eq_operator  go to state 128


State 90

  118 eq_expr: relational_expr •
  123 relational_expr: relational_expr • ineq_operator arithmetic_expr

    ABRACKET_OPEN     shift, and go to state 129
    ABRACKET_CLOSE    shift, and go to state 130
    LESS_THAN_EQUALS  shift, and go to state 131
    MORE_THAN_EQUALS  shift, and go to state 132

    $default  reduce using rule 118 (eq_expr)

    ineq_operator  go to state 133


State 91

  122 relational_expr: arithmetic_expr •
  129 arithmetic_expr: arithmetic_expr • add_operator term

    PLUS   shift, and go to state 134
    MINUS  shift, and go to state 135

    $default  reduce using rule 122 (relational_expr)

    add_operator  go to state 136


State 92

  128 arithmetic_expr: term •
  133 term: term • mult_operator prefix_expr

    TIMES  shift, and go to state 137
    SLASH  shift, and go to state 138
    MOD    shift, and go to state 139

    $default  reduce using rule 128 (arithmetic_expr)

    mult_operator  go to state 140


State 93

  132 term: prefix_expr •

    $default  reduce using rule 132 (term)


State 94

  140 prefix_expr: cast •

    $default  reduce using rule 140 (prefix_expr)


State 95

  138 prefix_expr: unary_operator • postfix_expr

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 141

    function_call  go to state 84
    val            go to state 85
    postfix_expr   go to state 142
    base           go to state 97
    target         go to state 98
    literal        go to state 99


State 96

  137 prefix_expr: postfix_expr •

    $default  reduce using rule 137 (prefix_expr)


State 97

  150 target: base •

    $default  reduce using rule 150 (target)


State 98

  145 postfix_expr: target •
  152 target: target • LBRACKET expr RBRACKET
  153       | target • DOT ID

    LBRACKET  shift, and go to state 143
    DOT       shift, and go to state 144

    $default  reduce using rule 145 (postfix_expr)


State 99

  146 postfix_expr: literal •

    $default  reduce using rule 146 (postfix_expr)


State 100

   21 allocation: NEW • type LBRACKET expr RBRACKET

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    type         go to state 145
    ptr_type     go to state 19
    map_type     go to state 20
    list_type    go to state 21
    enum_type    go to state 22
    struct_type  go to state 23


State 101

   17 initialization: LBRACE • initialization_list RBRACE

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    NEW      shift, and go to state 100
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    LBRACE   shift, and go to state 101
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    initialization       go to state 146
    initialization_list  go to state 147
    allocation           go to state 103
    function_call        go to state 84
    val                  go to state 85
    expr                 go to state 104
    or_expr              go to state 87
    and_expr             go to state 88
    eq_expr              go to state 89
    relational_expr      go to state 90
    arithmetic_expr      go to state 91
    term                 go to state 92
    prefix_expr          go to state 93
    cast                 go to state 94
    unary_operator       go to state 95
    postfix_expr         go to state 96
    base                 go to state 97
    target               go to state 98
    literal              go to state 99


State 102

   13 declaration_item: declaration_term ASSIGNMENT initialization •

    $default  reduce using rule 13 (declaration_item)


State 103

   18 initialization: allocation •

    $default  reduce using rule 18 (initialization)


State 104

   16 initialization: expr •

    $default  reduce using rule 16 (initialization)


State 105

   43 subprogram: VOID ID LPAREN RPAREN LBRACE • statements RBRACE

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statements          go to state 160
    statement           go to state 161
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 106

   46 parameter: type ID •

    $default  reduce using rule 46 (parameter)


State 107

   41 subprogram: VOID ID LPAREN parameters RPAREN • LBRACE statements RBRACE

    LBRACE  shift, and go to state 177


State 108

   45 parameters: parameters COMMA • parameter

    ID         shift, and go to state 4
    PRIM_TYPE  shift, and go to state 5
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    type         go to state 58
    ptr_type     go to state 19
    map_type     go to state 20
    list_type    go to state 21
    enum_type    go to state 22
    struct_type  go to state 23
    parameter    go to state 178


State 109

   34 enum_list: enum_list COMMA ID •

    $default  reduce using rule 34 (enum_list)


State 110

   30 map_type: MAP ABRACKET_OPEN type COMMA type • ABRACKET_CLOSE

    ABRACKET_CLOSE  shift, and go to state 179


State 111

    9 type_declaration: TYPE ID ASSIGNMENT type SEMICOLON •

    $default  reduce using rule 9 (type_declaration)


State 112

   42 subprogram: type ID LPAREN RPAREN LBRACE • statements RBRACE

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statements          go to state 180
    statement           go to state 161
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 113

   40 subprogram: type ID LPAREN parameters RPAREN • LBRACE statements RBRACE

    LBRACE  shift, and go to state 181


State 114

   88 function_call: ID LPAREN • RPAREN
   89              | ID LPAREN • parameters_call RPAREN

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    RPAREN   shift, and go to state 182
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    parameters_call  go to state 183
    val              go to state 85
    expr             go to state 184
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 115

  139 prefix_expr: REF LPAREN • identifier_ref RPAREN

    ID  shift, and go to state 185

    identifier_ref  go to state 186


State 116

   96 val: VAL LPAREN • target RPAREN

    ID      shift, and go to state 72
    VAL     shift, and go to state 79
    LPAREN  shift, and go to state 141

    function_call  go to state 84
    val            go to state 85
    base           go to state 97
    target         go to state 187


State 117

  141 cast: LPAREN PRIM_TYPE • RPAREN postfix_expr

    RPAREN  shift, and go to state 188


State 118

  149 base: LPAREN expr • RPAREN

    RPAREN  shift, and go to state 189


State 119

   15 declaration_term: declaration_term LBRACKET expr RBRACKET •

    $default  reduce using rule 15 (declaration_term)


State 120

  112 or_operator: OR •

    $default  reduce using rule 112 (or_operator)


State 121

  113 or_operator: ORC •

    $default  reduce using rule 113 (or_operator)


State 122

  111 or_expr: or_expr or_operator • and_expr

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    and_expr         go to state 190
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 123

  116 and_operator: AND •

    $default  reduce using rule 116 (and_operator)


State 124

  117 and_operator: ANDC •

    $default  reduce using rule 117 (and_operator)


State 125

  115 and_expr: and_expr and_operator • eq_expr

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    eq_expr          go to state 191
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 126

  120 eq_operator: EQUALITY •

    $default  reduce using rule 120 (eq_operator)


State 127

  121 eq_operator: DIFFERENCE •

    $default  reduce using rule 121 (eq_operator)


State 128

  119 eq_expr: eq_expr eq_operator • relational_expr

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    relational_expr  go to state 192
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 129

  124 ineq_operator: ABRACKET_OPEN •

    $default  reduce using rule 124 (ineq_operator)


State 130

  126 ineq_operator: ABRACKET_CLOSE •

    $default  reduce using rule 126 (ineq_operator)


State 131

  127 ineq_operator: LESS_THAN_EQUALS •

    $default  reduce using rule 127 (ineq_operator)


State 132

  125 ineq_operator: MORE_THAN_EQUALS •

    $default  reduce using rule 125 (ineq_operator)


State 133

  123 relational_expr: relational_expr ineq_operator • arithmetic_expr

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    arithmetic_expr  go to state 193
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 134

  130 add_operator: PLUS •

    $default  reduce using rule 130 (add_operator)


State 135

  131 add_operator: MINUS •

    $default  reduce using rule 131 (add_operator)


State 136

  129 arithmetic_expr: arithmetic_expr add_operator • term

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call   go to state 84
    val             go to state 85
    term            go to state 194
    prefix_expr     go to state 93
    cast            go to state 94
    unary_operator  go to state 95
    postfix_expr    go to state 96
    base            go to state 97
    target          go to state 98
    literal         go to state 99


State 137

  134 mult_operator: TIMES •

    $default  reduce using rule 134 (mult_operator)


State 138

  135 mult_operator: SLASH •

    $default  reduce using rule 135 (mult_operator)


State 139

  136 mult_operator: MOD •

    $default  reduce using rule 136 (mult_operator)


State 140

  133 term: term mult_operator • prefix_expr

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call   go to state 84
    val             go to state 85
    prefix_expr     go to state 195
    cast            go to state 94
    unary_operator  go to state 95
    postfix_expr    go to state 96
    base            go to state 97
    target          go to state 98
    literal         go to state 99


State 141

  149 base: LPAREN • expr RPAREN

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    expr             go to state 118
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 142

  138 prefix_expr: unary_operator postfix_expr •

    $default  reduce using rule 138 (prefix_expr)


State 143

  152 target: target LBRACKET • expr RBRACKET

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    expr             go to state 196
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 144

  153 target: target DOT • ID

    ID  shift, and go to state 197


State 145

   21 allocation: NEW type • LBRACKET expr RBRACKET

    LBRACKET  shift, and go to state 198


State 146

   19 initialization_list: initialization •

    $default  reduce using rule 19 (initialization_list)


State 147

   17 initialization: LBRACE initialization_list • RBRACE
   20 initialization_list: initialization_list • COMMA initialization

    RBRACE  shift, and go to state 199
    COMMA   shift, and go to state 200


State 148

   28 type: ID •
   88 function_call: ID • LPAREN RPAREN
   89              | ID • LPAREN parameters_call RPAREN
  106 identifier_ref: ID •

    LPAREN  shift, and go to state 114

    ID        reduce using rule 28 (type)
    $default  reduce using rule 106 (identifier_ref)


State 149

   67 if: IF • LPAREN expr RPAREN LBRACE statements RBRACE else_ifs_opt else_opt

    LPAREN  shift, and go to state 201


State 150

   81 switch: SWITCH • LPAREN expr RPAREN LBRACE cases RBRACE
   82       | SWITCH • LPAREN expr RPAREN LBRACE cases default RBRACE

    LPAREN  shift, and go to state 202


State 151

   77 do_while: DO • LBRACE statements RBRACE WHILE LPAREN expr RPAREN

    LBRACE  shift, and go to state 203


State 152

   76 while: WHILE • LPAREN expr RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 204


State 153

   78 for: FOR • LPAREN for_init expr SEMICOLON assignment RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 205


State 154

   62 jump: BREAK •

    $default  reduce using rule 62 (jump)


State 155

   61 jump: CONTINUE •

    $default  reduce using rule 61 (jump)


State 156

   64 return: RETURN • return_value

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    $default  reduce using rule 65 (return_value)

    return_value     go to state 206
    function_call    go to state 84
    val              go to state 85
    expr             go to state 207
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 157

  105 deletion: DELETE • LPAREN identifier_ref RPAREN SEMICOLON

    LPAREN  shift, and go to state 208


State 158

   49 statement: var_declaration •

    $default  reduce using rule 49 (statement)


State 159

   50 statement: const_declaration •

    $default  reduce using rule 50 (statement)


State 160

   43 subprogram: VOID ID LPAREN RPAREN LBRACE statements • RBRACE
   48 statements: statements • statement

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    RBRACE     shift, and go to state 209

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statement           go to state 210
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 161

   47 statements: statement •

    $default  reduce using rule 47 (statements)


State 162

   51 statement: command •

    $default  reduce using rule 51 (statement)


State 163

   59 command: jump • SEMICOLON

    SEMICOLON  shift, and go to state 211


State 164

   63 jump: return •

    $default  reduce using rule 63 (jump)


State 165

   53 command: if •

    $default  reduce using rule 53 (command)


State 166

   54 command: while •

    $default  reduce using rule 54 (command)


State 167

   55 command: do_while •

    $default  reduce using rule 55 (command)


State 168

   56 command: for •

    $default  reduce using rule 56 (command)


State 169

   57 command: switch •

    $default  reduce using rule 57 (command)


State 170

   58 command: function_call • SEMICOLON

    SEMICOLON  shift, and go to state 212


State 171

   93 assignment_command: assignment • SEMICOLON

    SEMICOLON  shift, and go to state 213


State 172

   52 statement: assignment_command •

    $default  reduce using rule 52 (statement)


State 173

   92 assignment: assignable • assignment_operator assignment_expr

    ASSIGNMENT      shift, and go to state 214
    ASSIGNMENT_MUL  shift, and go to state 215
    ASSIGNMENT_DIV  shift, and go to state 216
    ASSIGNMENT_MOD  shift, and go to state 217
    ASSIGNMENT_ADD  shift, and go to state 218
    ASSIGNMENT_SUB  shift, and go to state 219

    assignment_operator  go to state 220


State 174

   95 assignable: val •

    $default  reduce using rule 95 (assignable)


State 175

   60 command: deletion •

    $default  reduce using rule 60 (command)


State 176

   94 assignable: identifier_ref •
  107 identifier_ref: identifier_ref • LBRACKET expr RBRACKET
  108               | identifier_ref • DOT ID

    LBRACKET  shift, and go to state 221
    DOT       shift, and go to state 222

    $default  reduce using rule 94 (assignable)


State 177

   41 subprogram: VOID ID LPAREN parameters RPAREN LBRACE • statements RBRACE

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statements          go to state 223
    statement           go to state 161
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 178

   45 parameters: parameters COMMA parameter •

    $default  reduce using rule 45 (parameters)


State 179

   30 map_type: MAP ABRACKET_OPEN type COMMA type ABRACKET_CLOSE •

    $default  reduce using rule 30 (map_type)


State 180

   42 subprogram: type ID LPAREN RPAREN LBRACE statements • RBRACE
   48 statements: statements • statement

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    RBRACE     shift, and go to state 224

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statement           go to state 210
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 181

   40 subprogram: type ID LPAREN parameters RPAREN LBRACE • statements RBRACE

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statements          go to state 225
    statement           go to state 161
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 182

   88 function_call: ID LPAREN RPAREN •

    $default  reduce using rule 88 (function_call)


State 183

   89 function_call: ID LPAREN parameters_call • RPAREN
   91 parameters_call: parameters_call • COMMA expr

    RPAREN  shift, and go to state 226
    COMMA   shift, and go to state 227


State 184

   90 parameters_call: expr •

    $default  reduce using rule 90 (parameters_call)


State 185

  106 identifier_ref: ID •

    $default  reduce using rule 106 (identifier_ref)


State 186

  107 identifier_ref: identifier_ref • LBRACKET expr RBRACKET
  108               | identifier_ref • DOT ID
  139 prefix_expr: REF LPAREN identifier_ref • RPAREN

    RPAREN    shift, and go to state 228
    LBRACKET  shift, and go to state 221
    DOT       shift, and go to state 222


State 187

   96 val: VAL LPAREN target • RPAREN
  152 target: target • LBRACKET expr RBRACKET
  153       | target • DOT ID

    RPAREN    shift, and go to state 229
    LBRACKET  shift, and go to state 143
    DOT       shift, and go to state 144


State 188

  141 cast: LPAREN PRIM_TYPE RPAREN • postfix_expr

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 141

    function_call  go to state 84
    val            go to state 85
    postfix_expr   go to state 230
    base           go to state 97
    target         go to state 98
    literal        go to state 99


State 189

  149 base: LPAREN expr RPAREN •

    $default  reduce using rule 149 (base)


State 190

  111 or_expr: or_expr or_operator and_expr •
  115 and_expr: and_expr • and_operator eq_expr

    AND   shift, and go to state 123
    ANDC  shift, and go to state 124

    $default  reduce using rule 111 (or_expr)

    and_operator  go to state 125


State 191

  115 and_expr: and_expr and_operator eq_expr •
  119 eq_expr: eq_expr • eq_operator relational_expr

    EQUALITY    shift, and go to state 126
    DIFFERENCE  shift, and go to state 127

    $default  reduce using rule 115 (and_expr)

    eq_operator  go to state 128


State 192

  119 eq_expr: eq_expr eq_operator relational_expr •
  123 relational_expr: relational_expr • ineq_operator arithmetic_expr

    ABRACKET_OPEN     shift, and go to state 129
    ABRACKET_CLOSE    shift, and go to state 130
    LESS_THAN_EQUALS  shift, and go to state 131
    MORE_THAN_EQUALS  shift, and go to state 132

    $default  reduce using rule 119 (eq_expr)

    ineq_operator  go to state 133


State 193

  123 relational_expr: relational_expr ineq_operator arithmetic_expr •
  129 arithmetic_expr: arithmetic_expr • add_operator term

    PLUS   shift, and go to state 134
    MINUS  shift, and go to state 135

    $default  reduce using rule 123 (relational_expr)

    add_operator  go to state 136


State 194

  129 arithmetic_expr: arithmetic_expr add_operator term •
  133 term: term • mult_operator prefix_expr

    TIMES  shift, and go to state 137
    SLASH  shift, and go to state 138
    MOD    shift, and go to state 139

    $default  reduce using rule 129 (arithmetic_expr)

    mult_operator  go to state 140


State 195

  133 term: term mult_operator prefix_expr •

    $default  reduce using rule 133 (term)


State 196

  152 target: target LBRACKET expr • RBRACKET

    RBRACKET  shift, and go to state 231


State 197

  153 target: target DOT ID •

    $default  reduce using rule 153 (target)


State 198

   21 allocation: NEW type LBRACKET • expr RBRACKET

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    expr             go to state 232
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 199

   17 initialization: LBRACE initialization_list RBRACE •

    $default  reduce using rule 17 (initialization)


State 200

   20 initialization_list: initialization_list COMMA • initialization

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    NEW      shift, and go to state 100
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    LBRACE   shift, and go to state 101
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    initialization   go to state 233
    allocation       go to state 103
    function_call    go to state 84
    val              go to state 85
    expr             go to state 104
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 201

   67 if: IF LPAREN • expr RPAREN LBRACE statements RBRACE else_ifs_opt else_opt

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    expr             go to state 234
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 202

   81 switch: SWITCH LPAREN • expr RPAREN LBRACE cases RBRACE
   82       | SWITCH LPAREN • expr RPAREN LBRACE cases default RBRACE

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    expr             go to state 235
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 203

   77 do_while: DO LBRACE • statements RBRACE WHILE LPAREN expr RPAREN

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statements          go to state 236
    statement           go to state 161
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 204

   76 while: WHILE LPAREN • expr RPAREN LBRACE statements RBRACE

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    expr             go to state 237
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 205

   78 for: FOR LPAREN • for_init expr SEMICOLON assignment RPAREN LBRACE statements RBRACE

    ID         shift, and go to state 238
    PRIM_TYPE  shift, and go to state 5
    VAL        shift, and go to state 79
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration     go to state 239
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    for_init            go to state 240
    assignment          go to state 171
    assignment_command  go to state 241
    assignable          go to state 173
    val                 go to state 174
    identifier_ref      go to state 176


State 206

   64 return: RETURN return_value •

    $default  reduce using rule 64 (return)


State 207

   66 return_value: expr •

    $default  reduce using rule 66 (return_value)


State 208

  105 deletion: DELETE LPAREN • identifier_ref RPAREN SEMICOLON

    ID  shift, and go to state 185

    identifier_ref  go to state 242


State 209

   43 subprogram: VOID ID LPAREN RPAREN LBRACE statements RBRACE •

    $default  reduce using rule 43 (subprogram)


State 210

   48 statements: statements statement •

    $default  reduce using rule 48 (statements)


State 211

   59 command: jump SEMICOLON •

    $default  reduce using rule 59 (command)


State 212

   58 command: function_call SEMICOLON •

    $default  reduce using rule 58 (command)


State 213

   93 assignment_command: assignment SEMICOLON •

    $default  reduce using rule 93 (assignment_command)


State 214

   97 assignment_operator: ASSIGNMENT •

    $default  reduce using rule 97 (assignment_operator)


State 215

   98 assignment_operator: ASSIGNMENT_MUL •

    $default  reduce using rule 98 (assignment_operator)


State 216

   99 assignment_operator: ASSIGNMENT_DIV •

    $default  reduce using rule 99 (assignment_operator)


State 217

  100 assignment_operator: ASSIGNMENT_MOD •

    $default  reduce using rule 100 (assignment_operator)


State 218

  101 assignment_operator: ASSIGNMENT_ADD •

    $default  reduce using rule 101 (assignment_operator)


State 219

  102 assignment_operator: ASSIGNMENT_SUB •

    $default  reduce using rule 102 (assignment_operator)


State 220

   92 assignment: assignable assignment_operator • assignment_expr

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    NEW      shift, and go to state 100
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    allocation       go to state 243
    function_call    go to state 84
    val              go to state 85
    assignment_expr  go to state 244
    expr             go to state 245
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 221

  107 identifier_ref: identifier_ref LBRACKET • expr RBRACKET

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    expr             go to state 246
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 222

  108 identifier_ref: identifier_ref DOT • ID

    ID  shift, and go to state 247


State 223

   41 subprogram: VOID ID LPAREN parameters RPAREN LBRACE statements • RBRACE
   48 statements: statements • statement

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    RBRACE     shift, and go to state 248

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statement           go to state 210
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 224

   42 subprogram: type ID LPAREN RPAREN LBRACE statements RBRACE •

    $default  reduce using rule 42 (subprogram)


State 225

   40 subprogram: type ID LPAREN parameters RPAREN LBRACE statements • RBRACE
   48 statements: statements • statement

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    RBRACE     shift, and go to state 249

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statement           go to state 210
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 226

   89 function_call: ID LPAREN parameters_call RPAREN •

    $default  reduce using rule 89 (function_call)


State 227

   91 parameters_call: parameters_call COMMA • expr

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    expr             go to state 250
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 228

  139 prefix_expr: REF LPAREN identifier_ref RPAREN •

    $default  reduce using rule 139 (prefix_expr)


State 229

   96 val: VAL LPAREN target RPAREN •

    $default  reduce using rule 96 (val)


State 230

  141 cast: LPAREN PRIM_TYPE RPAREN postfix_expr •

    $default  reduce using rule 141 (cast)


State 231

  152 target: target LBRACKET expr RBRACKET •

    $default  reduce using rule 152 (target)


State 232

   21 allocation: NEW type LBRACKET expr • RBRACKET

    RBRACKET  shift, and go to state 251


State 233

   20 initialization_list: initialization_list COMMA initialization •

    $default  reduce using rule 20 (initialization_list)


State 234

   67 if: IF LPAREN expr • RPAREN LBRACE statements RBRACE else_ifs_opt else_opt

    RPAREN  shift, and go to state 252


State 235

   81 switch: SWITCH LPAREN expr • RPAREN LBRACE cases RBRACE
   82       | SWITCH LPAREN expr • RPAREN LBRACE cases default RBRACE

    RPAREN  shift, and go to state 253


State 236

   48 statements: statements • statement
   77 do_while: DO LBRACE statements • RBRACE WHILE LPAREN expr RPAREN

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    RBRACE     shift, and go to state 254

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statement           go to state 210
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 237

   76 while: WHILE LPAREN expr • RPAREN LBRACE statements RBRACE

    RPAREN  shift, and go to state 255


State 238

   28 type: ID •
  106 identifier_ref: ID •

    ID        reduce using rule 28 (type)
    $default  reduce using rule 106 (identifier_ref)


State 239

   80 for_init: var_declaration •

    $default  reduce using rule 80 (for_init)


State 240

   78 for: FOR LPAREN for_init • expr SEMICOLON assignment RPAREN LBRACE statements RBRACE

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    expr             go to state 256
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 241

   79 for_init: assignment_command •

    $default  reduce using rule 79 (for_init)


State 242

  105 deletion: DELETE LPAREN identifier_ref • RPAREN SEMICOLON
  107 identifier_ref: identifier_ref • LBRACKET expr RBRACKET
  108               | identifier_ref • DOT ID

    RPAREN    shift, and go to state 257
    LBRACKET  shift, and go to state 221
    DOT       shift, and go to state 222


State 243

  104 assignment_expr: allocation •

    $default  reduce using rule 104 (assignment_expr)


State 244

   92 assignment: assignable assignment_operator assignment_expr •

    $default  reduce using rule 92 (assignment)


State 245

  103 assignment_expr: expr •

    $default  reduce using rule 103 (assignment_expr)


State 246

  107 identifier_ref: identifier_ref LBRACKET expr • RBRACKET

    RBRACKET  shift, and go to state 258


State 247

  108 identifier_ref: identifier_ref DOT ID •

    $default  reduce using rule 108 (identifier_ref)


State 248

   41 subprogram: VOID ID LPAREN parameters RPAREN LBRACE statements RBRACE •

    $default  reduce using rule 41 (subprogram)


State 249

   40 subprogram: type ID LPAREN parameters RPAREN LBRACE statements RBRACE •

    $default  reduce using rule 40 (subprogram)


State 250

   91 parameters_call: parameters_call COMMA expr •

    $default  reduce using rule 91 (parameters_call)


State 251

   21 allocation: NEW type LBRACKET expr RBRACKET •

    $default  reduce using rule 21 (allocation)


State 252

   67 if: IF LPAREN expr RPAREN • LBRACE statements RBRACE else_ifs_opt else_opt

    LBRACE  shift, and go to state 259


State 253

   81 switch: SWITCH LPAREN expr RPAREN • LBRACE cases RBRACE
   82       | SWITCH LPAREN expr RPAREN • LBRACE cases default RBRACE

    LBRACE  shift, and go to state 260


State 254

   77 do_while: DO LBRACE statements RBRACE • WHILE LPAREN expr RPAREN

    WHILE  shift, and go to state 261


State 255

   76 while: WHILE LPAREN expr RPAREN • LBRACE statements RBRACE

    LBRACE  shift, and go to state 262


State 256

   78 for: FOR LPAREN for_init expr • SEMICOLON assignment RPAREN LBRACE statements RBRACE

    SEMICOLON  shift, and go to state 263


State 257

  105 deletion: DELETE LPAREN identifier_ref RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 264


State 258

  107 identifier_ref: identifier_ref LBRACKET expr RBRACKET •

    $default  reduce using rule 107 (identifier_ref)


State 259

   67 if: IF LPAREN expr RPAREN LBRACE • statements RBRACE else_ifs_opt else_opt

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statements          go to state 265
    statement           go to state 161
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 260

   81 switch: SWITCH LPAREN expr RPAREN LBRACE • cases RBRACE
   82       | SWITCH LPAREN expr RPAREN LBRACE • cases default RBRACE

    CASE  shift, and go to state 266

    cases  go to state 267
    case   go to state 268


State 261

   77 do_while: DO LBRACE statements RBRACE WHILE • LPAREN expr RPAREN

    LPAREN  shift, and go to state 269


State 262

   76 while: WHILE LPAREN expr RPAREN LBRACE • statements RBRACE

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statements          go to state 270
    statement           go to state 161
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 263

   78 for: FOR LPAREN for_init expr SEMICOLON • assignment RPAREN LBRACE statements RBRACE

    ID   shift, and go to state 185
    VAL  shift, and go to state 79

    assignment      go to state 271
    assignable      go to state 173
    val             go to state 174
    identifier_ref  go to state 176


State 264

  105 deletion: DELETE LPAREN identifier_ref RPAREN SEMICOLON •

    $default  reduce using rule 105 (deletion)


State 265

   48 statements: statements • statement
   67 if: IF LPAREN expr RPAREN LBRACE statements • RBRACE else_ifs_opt else_opt

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    RBRACE     shift, and go to state 272

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statement           go to state 210
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 266

   85 case: CASE • case_item

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    case_item        go to state 273
    function_call    go to state 84
    val              go to state 85
    expr             go to state 274
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 267

   81 switch: SWITCH LPAREN expr RPAREN LBRACE cases • RBRACE
   82       | SWITCH LPAREN expr RPAREN LBRACE cases • default RBRACE
   84 cases: cases • case

    CASE     shift, and go to state 266
    DEFAULT  shift, and go to state 275
    RBRACE   shift, and go to state 276

    case     go to state 277
    default  go to state 278


State 268

   83 cases: case •

    $default  reduce using rule 83 (cases)


State 269

   77 do_while: DO LBRACE statements RBRACE WHILE LPAREN • expr RPAREN

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    expr             go to state 279
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 270

   48 statements: statements • statement
   76 while: WHILE LPAREN expr RPAREN LBRACE statements • RBRACE

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    RBRACE     shift, and go to state 280

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statement           go to state 210
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 271

   78 for: FOR LPAREN for_init expr SEMICOLON assignment • RPAREN LBRACE statements RBRACE

    RPAREN  shift, and go to state 281


State 272

   67 if: IF LPAREN expr RPAREN LBRACE statements RBRACE • else_ifs_opt else_opt

    ELSEIF  shift, and go to state 282

    $default  reduce using rule 68 (else_ifs_opt)

    else_ifs_opt  go to state 283
    else_ifs      go to state 284
    else_if       go to state 285


State 273

   85 case: CASE case_item •

    $default  reduce using rule 85 (case)


State 274

   87 case_item: expr • COLON statements

    COLON  shift, and go to state 286


State 275

   86 default: DEFAULT • COLON statements

    COLON  shift, and go to state 287


State 276

   81 switch: SWITCH LPAREN expr RPAREN LBRACE cases RBRACE •

    $default  reduce using rule 81 (switch)


State 277

   84 cases: cases case •

    $default  reduce using rule 84 (cases)


State 278

   82 switch: SWITCH LPAREN expr RPAREN LBRACE cases default • RBRACE

    RBRACE  shift, and go to state 288


State 279

   77 do_while: DO LBRACE statements RBRACE WHILE LPAREN expr • RPAREN

    RPAREN  shift, and go to state 289


State 280

   76 while: WHILE LPAREN expr RPAREN LBRACE statements RBRACE •

    $default  reduce using rule 76 (while)


State 281

   78 for: FOR LPAREN for_init expr SEMICOLON assignment RPAREN • LBRACE statements RBRACE

    LBRACE  shift, and go to state 290


State 282

   72 else_if: ELSEIF • LPAREN expr RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 291


State 283

   67 if: IF LPAREN expr RPAREN LBRACE statements RBRACE else_ifs_opt • else_opt

    ELSE  shift, and go to state 292

    $default  reduce using rule 73 (else_opt)

    else_opt  go to state 293
    else      go to state 294


State 284

   69 else_ifs_opt: else_ifs •
   71 else_ifs: else_ifs • else_if

    ELSEIF  shift, and go to state 282

    $default  reduce using rule 69 (else_ifs_opt)

    else_if  go to state 295


State 285

   70 else_ifs: else_if •

    $default  reduce using rule 70 (else_ifs)


State 286

   87 case_item: expr COLON • statements

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statements          go to state 296
    statement           go to state 161
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 287

   86 default: DEFAULT COLON • statements

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statements          go to state 297
    statement           go to state 161
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 288

   82 switch: SWITCH LPAREN expr RPAREN LBRACE cases default RBRACE •

    $default  reduce using rule 82 (switch)


State 289

   77 do_while: DO LBRACE statements RBRACE WHILE LPAREN expr RPAREN •

    $default  reduce using rule 77 (do_while)


State 290

   78 for: FOR LPAREN for_init expr SEMICOLON assignment RPAREN LBRACE • statements RBRACE

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statements          go to state 298
    statement           go to state 161
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 291

   72 else_if: ELSEIF LPAREN • expr RPAREN LBRACE statements RBRACE

    ID       shift, and go to state 72
    INTEGER  shift, and go to state 73
    STRING   shift, and go to state 74
    BOOL     shift, and go to state 75
    REAL     shift, and go to state 76
    CHAR     shift, and go to state 77
    REF      shift, and go to state 78
    VAL      shift, and go to state 79
    LPAREN   shift, and go to state 80
    NOT      shift, and go to state 81
    PLUS     shift, and go to state 82
    MINUS    shift, and go to state 83

    function_call    go to state 84
    val              go to state 85
    expr             go to state 299
    or_expr          go to state 87
    and_expr         go to state 88
    eq_expr          go to state 89
    relational_expr  go to state 90
    arithmetic_expr  go to state 91
    term             go to state 92
    prefix_expr      go to state 93
    cast             go to state 94
    unary_operator   go to state 95
    postfix_expr     go to state 96
    base             go to state 97
    target           go to state 98
    literal          go to state 99


State 292

   75 else: ELSE • LBRACE statements RBRACE

    LBRACE  shift, and go to state 300


State 293

   67 if: IF LPAREN expr RPAREN LBRACE statements RBRACE else_ifs_opt else_opt •

    $default  reduce using rule 67 (if)


State 294

   74 else_opt: else •

    $default  reduce using rule 74 (else_opt)


State 295

   71 else_ifs: else_ifs else_if •

    $default  reduce using rule 71 (else_ifs)


State 296

   48 statements: statements • statement
   87 case_item: expr COLON statements •

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    $default  reduce using rule 87 (case_item)

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statement           go to state 210
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 297

   48 statements: statements • statement
   86 default: DEFAULT COLON statements •

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    $default  reduce using rule 86 (default)

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statement           go to state 210
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 298

   48 statements: statements • statement
   78 for: FOR LPAREN for_init expr SEMICOLON assignment RPAREN LBRACE statements • RBRACE

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    RBRACE     shift, and go to state 301

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statement           go to state 210
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 299

   72 else_if: ELSEIF LPAREN expr • RPAREN LBRACE statements RBRACE

    RPAREN  shift, and go to state 302


State 300

   75 else: ELSE LBRACE • statements RBRACE

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statements          go to state 303
    statement           go to state 161
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 301

   78 for: FOR LPAREN for_init expr SEMICOLON assignment RPAREN LBRACE statements RBRACE •

    $default  reduce using rule 78 (for)


State 302

   72 else_if: ELSEIF LPAREN expr RPAREN • LBRACE statements RBRACE

    LBRACE  shift, and go to state 304


State 303

   48 statements: statements • statement
   75 else: ELSE LBRACE statements • RBRACE

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    RBRACE     shift, and go to state 305

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statement           go to state 210
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 304

   72 else_if: ELSEIF LPAREN expr RPAREN LBRACE • statements RBRACE

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statements          go to state 306
    statement           go to state 161
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 305

   75 else: ELSE LBRACE statements RBRACE •

    $default  reduce using rule 75 (else)


State 306

   48 statements: statements • statement
   72 else_if: ELSEIF LPAREN expr RPAREN LBRACE statements • RBRACE

    ID         shift, and go to state 148
    PRIM_TYPE  shift, and go to state 5
    IF         shift, and go to state 149
    SWITCH     shift, and go to state 150
    DO         shift, and go to state 151
    WHILE      shift, and go to state 152
    FOR        shift, and go to state 153
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    RETURN     shift, and go to state 156
    DELETE     shift, and go to state 157
    VAL        shift, and go to state 79
    CONST      shift, and go to state 6
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    PTR        shift, and go to state 10
    LIST       shift, and go to state 11
    MAP        shift, and go to state 12
    RBRACE     shift, and go to state 307

    var_declaration     go to state 158
    const_declaration   go to state 159
    type                go to state 27
    ptr_type            go to state 19
    map_type            go to state 20
    list_type           go to state 21
    enum_type           go to state 22
    struct_type         go to state 23
    statement           go to state 210
    command             go to state 162
    jump                go to state 163
    return              go to state 164
    if                  go to state 165
    while               go to state 166
    do_while            go to state 167
    for                 go to state 168
    switch              go to state 169
    function_call       go to state 170
    assignment          go to state 171
    assignment_command  go to state 172
    assignable          go to state 173
    val                 go to state 174
    deletion            go to state 175
    identifier_ref      go to state 176


State 307

   72 else_if: ELSEIF LPAREN expr RPAREN LBRACE statements RBRACE •

    $default  reduce using rule 72 (else_if)
