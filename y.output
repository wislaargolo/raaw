State 32 conflicts: 1 shift/reduce
State 103 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: declarations subprograms

    2 declarations: declaration
    3             | declarations declaration

    4 declaration: var_declaration
    5            | const_declaration
    6            | type_declaration

    7 var_declaration: type declaration_line SEMICOLON

    8 const_declaration: CONST var_declaration

    9 type_declaration: TYPE ID ASSIGNMENT type SEMICOLON

   10 declaration_line: declaration_item
   11                 | declaration_line COMMA declaration_item

   12 declaration_item: declaration_term
   13                 | declaration_term ASSIGNMENT initialization

   14 declaration_term: ID
   15                 | declaration_term LBRACKET expr RBRACKET

   16 initialization: expr
   17               | LBRACE initialization_list RBRACE
   18               | allocation

   19 initialization_list: initialization
   20                    | initialization_list COMMA initialization

   21 allocation: NEW type LBRACKET expr RBRACKET

   22 type: PRIM_TYPE
   23     | ptr_type
   24     | enum_type
   25     | struct_type
   26     | map_type
   27     | list_type
   28     | ID

   29 ptr_type: PTR ABRACKET_OPEN type ABRACKET_CLOSE

   30 map_type: MAP ABRACKET_OPEN type COMMA type ABRACKET_CLOSE

   31 list_type: LIST ABRACKET_OPEN type ABRACKET_CLOSE

   32 enum_type: ENUM LBRACE enum_list RBRACE

   33 enum_list: ID
   34          | enum_list COMMA ID

   35 struct_type: STRUCT LBRACE struct_vars RBRACE

   36 struct_vars: var_declaration
   37            | struct_vars var_declaration

   38 subprograms: subprogram
   39            | subprograms subprogram

   40 subprogram: return_type ID LPAREN parameters RPAREN LBRACE statements RBRACE

   41 return_type: type
   42            | VOID

   43 parameters: parameter
   44           | parameters COMMA parameter

   45 parameter: type ID

   46 statements: statement
   47           | statements statement

   48 statement: var_declaration
   49          | const_declaration
   50          | command

   51 command: if
   52        | while
   53        | do_while
   54        | for
   55        | switch
   56        | function_call SEMICOLON
   57        | jump SEMICOLON
   58        | deletion

   59 jump: CONTINUE
   60     | BREAK
   61     | return

   62 return: RETURN return_value

   63 return_value: ε
   64             | expr

   65 if: IF LPAREN expr RPAREN LBRACE statement RBRACE else_ifs_opt else_opt

   66 else_ifs_opt: ε
   67             | else_ifs

   68 else_ifs: else_if
   69         | else_ifs else_if

   70 else_if: ELSEIF LPAREN expr RPAREN LBRACE statements RBRACE

   71 else_opt: ε
   72         | else

   73 else: ELSE LBRACE statements RBRACE

   74 while: WHILE LPAREN expr RPAREN LBRACE statements RBRACE

   75 do_while: DO LBRACE statements RBRACE WHILE LPAREN expr RPAREN

   76 for: FOR LPAREN for_initialization COMMA expr COMMA command RPAREN LBRACE statements RBRACE

   77 for_initialization: assignment
   78                   | var_declaration

   79 switch: SWITCH LPAREN expr RPAREN LBRACE cases RBRACE
   80       | SWITCH LPAREN expr RPAREN LBRACE cases default RBRACE

   81 cases: case
   82      | cases case

   83 case: CASE case_item

   84 default: DEFAULT case_item

   85 case_item: expr COLON statements

   86 function_call: ID LPAREN RPAREN
   87              | ID LPAREN parameters_call RPAREN

   88 parameters_call: expr
   89                | parameters_call COMMA expr

   90 assignment: assignable assignment_operator assignment_expr SEMICOLON

   91 assignable: identifier_ref
   92           | VAL postfix_expr

   93 assignment_operator: ASSIGNMENT
   94                    | ASSIGNMENT_MUL
   95                    | ASSIGNMENT_DIV
   96                    | ASSIGNMENT_MOD
   97                    | ASSIGNMENT_ADD
   98                    | ASSIGNMENT_SUB

   99 assignment_expr: expr
  100                | allocation

  101 deletion: DELETE identifier_ref SEMICOLON

  102 identifier_ref: ID
  103               | identifier_ref LBRACKET expr RBRACKET
  104               | identifier_ref DOT ID

  105 expr: or_expr

  106 or_expr: and_expr
  107        | or_expr or_operator and_expr

  108 or_operator: OR
  109            | ORC

  110 and_expr: eq_expr
  111         | and_expr and_operator eq_expr

  112 and_operator: AND
  113             | ANDC

  114 eq_expr: relational_expr
  115        | eq_expr eq_operator relational_expr

  116 eq_operator: EQUALITY
  117            | DIFFERENCE

  118 relational_expr: arithmetic_expr
  119                | relational_expr ineq_operator arithmetic_expr

  120 ineq_operator: ABRACKET_OPEN
  121              | MORE_THAN_EQUALS
  122              | ABRACKET_CLOSE
  123              | LESS_THAN_EQUALS

  124 arithmetic_expr: term
  125                | arithmetic_expr add_operator term

  126 add_operator: PLUS
  127             | MINUS

  128 term: prefix_expr
  129     | term mult_operator prefix_expr

  130 mult_operator: TIMES
  131              | SLASH
  132              | MOD

  133 prefix_expr: postfix_expr
  134            | unary_operator postfix_expr

  135 unary_operator: PLUS
  136               | MINUS
  137               | REF
  138               | VAL
  139               | NOT

  140 postfix_expr: cast
  141             | function_call

  142 cast: element
  143     | LPAREN type RPAREN element

  144 element: ID
  145        | literal
  146        | LPAREN expr RPAREN

  147 literal: INTEGER
  148        | CHAR
  149        | STRING
  150        | REAL
  151        | BOOL


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sValue> (258) 9 14 28 33 34 40 45 86 87 102 104 144
    PRIM_TYPE <sValue> (259) 22
    INTEGER <sValue> (260) 147
    STRING <sValue> (261) 149
    BOOL <sValue> (262) 151
    REAL <sValue> (263) 150
    CHAR <cValue> (264) 148
    IF (265) 65
    ELSE (266) 73
    ELSEIF (267) 70
    SWITCH (268) 79 80
    CASE (269) 83
    DEFAULT (270) 84
    DO (271) 75
    WHILE (272) 74 75
    FOR (273) 76
    BREAK (274) 60
    CONTINUE (275) 59
    RETURN (276) 62
    NEW (277) 21
    DELETE (278) 101
    REF (279) 137
    VAL (280) 92 138
    CONST (281) 8
    VOID (282) 42
    STRUCT (283) 35
    ENUM (284) 32
    PTR (285) 29
    LIST (286) 31
    MAP (287) 30
    TYPE (288) 9
    LPAREN (289) 40 65 70 74 75 76 79 80 86 87 143 146
    RPAREN (290) 40 65 70 74 75 76 79 80 86 87 143 146
    LBRACE (291) 17 32 35 40 65 70 73 74 75 76 79 80
    RBRACE (292) 17 32 35 40 65 70 73 74 75 76 79 80
    LBRACKET (293) 15 21 103
    RBRACKET (294) 15 21 103
    SEMICOLON (295) 7 9 56 57 90 101
    COLON (296) 85
    COMMA (297) 11 20 30 34 44 76 89
    DOT (298) 104
    EQUALITY (299) 116
    DIFFERENCE (300) 117
    ABRACKET_OPEN (301) 29 30 31 120
    ABRACKET_CLOSE (302) 29 30 31 122
    LESS_THAN_EQUALS (303) 123
    MORE_THAN_EQUALS (304) 121
    ASSIGNMENT (305) 9 13 93
    ASSIGNMENT_MUL (306) 94
    ASSIGNMENT_DIV (307) 95
    ASSIGNMENT_MOD (308) 96
    ASSIGNMENT_ADD (309) 97
    ASSIGNMENT_SUB (310) 98
    AND (311) 112
    ANDC (312) 113
    OR (313) 108
    ORC (314) 109
    NOT (315) 139
    PLUS (316) 126 135
    MINUS (317) 127 136
    TIMES (318) 130
    SLASH (319) 131
    MOD (320) 132


Nonterminals, with rules where they appear

    $accept (66)
        on left: 0
    program (67)
        on left: 1
        on right: 0
    declarations (68)
        on left: 2 3
        on right: 1 3
    declaration (69)
        on left: 4 5 6
        on right: 2 3
    var_declaration (70)
        on left: 7
        on right: 4 8 36 37 48 78
    const_declaration (71)
        on left: 8
        on right: 5 49
    type_declaration (72)
        on left: 9
        on right: 6
    declaration_line (73)
        on left: 10 11
        on right: 7 11
    declaration_item (74)
        on left: 12 13
        on right: 10 11
    declaration_term (75)
        on left: 14 15
        on right: 12 13 15
    initialization (76)
        on left: 16 17 18
        on right: 13 19 20
    initialization_list (77)
        on left: 19 20
        on right: 17 20
    allocation (78)
        on left: 21
        on right: 18 100
    type <sValue> (79)
        on left: 22 23 24 25 26 27 28
        on right: 7 9 21 29 30 31 41 45 143
    ptr_type (80)
        on left: 29
        on right: 23
    map_type (81)
        on left: 30
        on right: 26
    list_type (82)
        on left: 31
        on right: 27
    enum_type (83)
        on left: 32
        on right: 24
    enum_list (84)
        on left: 33 34
        on right: 32 34
    struct_type (85)
        on left: 35
        on right: 25
    struct_vars (86)
        on left: 36 37
        on right: 35 37
    subprograms (87)
        on left: 38 39
        on right: 1 39
    subprogram (88)
        on left: 40
        on right: 38 39
    return_type (89)
        on left: 41 42
        on right: 40
    parameters (90)
        on left: 43 44
        on right: 40 44
    parameter (91)
        on left: 45
        on right: 43 44
    statements (92)
        on left: 46 47
        on right: 40 47 70 73 74 75 76 85
    statement (93)
        on left: 48 49 50
        on right: 46 47 65
    command (94)
        on left: 51 52 53 54 55 56 57 58
        on right: 50 76
    jump (95)
        on left: 59 60 61
        on right: 57
    return (96)
        on left: 62
        on right: 61
    return_value (97)
        on left: 63 64
        on right: 62
    if (98)
        on left: 65
        on right: 51
    else_ifs_opt (99)
        on left: 66 67
        on right: 65
    else_ifs (100)
        on left: 68 69
        on right: 67 69
    else_if (101)
        on left: 70
        on right: 68 69
    else_opt (102)
        on left: 71 72
        on right: 65
    else (103)
        on left: 73
        on right: 72
    while (104)
        on left: 74
        on right: 52
    do_while (105)
        on left: 75
        on right: 53
    for (106)
        on left: 76
        on right: 54
    for_initialization (107)
        on left: 77 78
        on right: 76
    switch (108)
        on left: 79 80
        on right: 55
    cases (109)
        on left: 81 82
        on right: 79 80 82
    case (110)
        on left: 83
        on right: 81 82
    default (111)
        on left: 84
        on right: 80
    case_item (112)
        on left: 85
        on right: 83 84
    function_call (113)
        on left: 86 87
        on right: 56 141
    parameters_call (114)
        on left: 88 89
        on right: 87 89
    assignment (115)
        on left: 90
        on right: 77
    assignable (116)
        on left: 91 92
        on right: 90
    assignment_operator (117)
        on left: 93 94 95 96 97 98
        on right: 90
    assignment_expr (118)
        on left: 99 100
        on right: 90
    deletion (119)
        on left: 101
        on right: 58
    identifier_ref (120)
        on left: 102 103 104
        on right: 91 101 103 104
    expr (121)
        on left: 105
        on right: 15 16 21 64 65 70 74 75 76 79 80 85 88 89 99 103 146
    or_expr (122)
        on left: 106 107
        on right: 105 107
    or_operator (123)
        on left: 108 109
        on right: 107
    and_expr (124)
        on left: 110 111
        on right: 106 107 111
    and_operator (125)
        on left: 112 113
        on right: 111
    eq_expr (126)
        on left: 114 115
        on right: 110 111 115
    eq_operator (127)
        on left: 116 117
        on right: 115
    relational_expr (128)
        on left: 118 119
        on right: 114 115 119
    ineq_operator (129)
        on left: 120 121 122 123
        on right: 119
    arithmetic_expr (130)
        on left: 124 125
        on right: 118 119 125
    add_operator (131)
        on left: 126 127
        on right: 125
    term (132)
        on left: 128 129
        on right: 124 125 129
    mult_operator (133)
        on left: 130 131 132
        on right: 129
    prefix_expr (134)
        on left: 133 134
        on right: 128 129
    unary_operator (135)
        on left: 135 136 137 138 139
        on right: 134
    postfix_expr (136)
        on left: 140 141
        on right: 92 133 134
    cast (137)
        on left: 142 143
        on right: 140
    element (138)
        on left: 144 145 146
        on right: 142 143
    literal (139)
        on left: 147 148 149 150 151
        on right: 145


State 0

    0 $accept: • program $end

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8
    TYPE       shift, and go to state 9

    program            go to state 10
    declarations       go to state 11
    declaration        go to state 12
    var_declaration    go to state 13
    const_declaration  go to state 14
    type_declaration   go to state 15
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21


State 1

   28 type: ID •

    $default  reduce using rule 28 (type)


State 2

   22 type: PRIM_TYPE •

    $default  reduce using rule 22 (type)


State 3

    8 const_declaration: CONST • var_declaration

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    var_declaration  go to state 22
    type             go to state 16
    ptr_type         go to state 17
    map_type         go to state 18
    list_type        go to state 19
    enum_type        go to state 20
    struct_type      go to state 21


State 4

   35 struct_type: STRUCT • LBRACE struct_vars RBRACE

    LBRACE  shift, and go to state 23


State 5

   32 enum_type: ENUM • LBRACE enum_list RBRACE

    LBRACE  shift, and go to state 24


State 6

   29 ptr_type: PTR • ABRACKET_OPEN type ABRACKET_CLOSE

    ABRACKET_OPEN  shift, and go to state 25


State 7

   31 list_type: LIST • ABRACKET_OPEN type ABRACKET_CLOSE

    ABRACKET_OPEN  shift, and go to state 26


State 8

   30 map_type: MAP • ABRACKET_OPEN type COMMA type ABRACKET_CLOSE

    ABRACKET_OPEN  shift, and go to state 27


State 9

    9 type_declaration: TYPE • ID ASSIGNMENT type SEMICOLON

    ID  shift, and go to state 28


State 10

    0 $accept: program • $end

    $end  shift, and go to state 29


State 11

    1 program: declarations • subprograms
    3 declarations: declarations • declaration

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    CONST      shift, and go to state 3
    VOID       shift, and go to state 30
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8
    TYPE       shift, and go to state 9

    declaration        go to state 31
    var_declaration    go to state 13
    const_declaration  go to state 14
    type_declaration   go to state 15
    type               go to state 32
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    subprograms        go to state 33
    subprogram         go to state 34
    return_type        go to state 35


State 12

    2 declarations: declaration •

    $default  reduce using rule 2 (declarations)


State 13

    4 declaration: var_declaration •

    $default  reduce using rule 4 (declaration)


State 14

    5 declaration: const_declaration •

    $default  reduce using rule 5 (declaration)


State 15

    6 declaration: type_declaration •

    $default  reduce using rule 6 (declaration)


State 16

    7 var_declaration: type • declaration_line SEMICOLON

    ID  shift, and go to state 36

    declaration_line  go to state 37
    declaration_item  go to state 38
    declaration_term  go to state 39


State 17

   23 type: ptr_type •

    $default  reduce using rule 23 (type)


State 18

   26 type: map_type •

    $default  reduce using rule 26 (type)


State 19

   27 type: list_type •

    $default  reduce using rule 27 (type)


State 20

   24 type: enum_type •

    $default  reduce using rule 24 (type)


State 21

   25 type: struct_type •

    $default  reduce using rule 25 (type)


State 22

    8 const_declaration: CONST var_declaration •

    $default  reduce using rule 8 (const_declaration)


State 23

   35 struct_type: STRUCT LBRACE • struct_vars RBRACE

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    var_declaration  go to state 40
    type             go to state 16
    ptr_type         go to state 17
    map_type         go to state 18
    list_type        go to state 19
    enum_type        go to state 20
    struct_type      go to state 21
    struct_vars      go to state 41


State 24

   32 enum_type: ENUM LBRACE • enum_list RBRACE

    ID  shift, and go to state 42

    enum_list  go to state 43


State 25

   29 ptr_type: PTR ABRACKET_OPEN • type ABRACKET_CLOSE

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    type         go to state 44
    ptr_type     go to state 17
    map_type     go to state 18
    list_type    go to state 19
    enum_type    go to state 20
    struct_type  go to state 21


State 26

   31 list_type: LIST ABRACKET_OPEN • type ABRACKET_CLOSE

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    type         go to state 45
    ptr_type     go to state 17
    map_type     go to state 18
    list_type    go to state 19
    enum_type    go to state 20
    struct_type  go to state 21


State 27

   30 map_type: MAP ABRACKET_OPEN • type COMMA type ABRACKET_CLOSE

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    type         go to state 46
    ptr_type     go to state 17
    map_type     go to state 18
    list_type    go to state 19
    enum_type    go to state 20
    struct_type  go to state 21


State 28

    9 type_declaration: TYPE ID • ASSIGNMENT type SEMICOLON

    ASSIGNMENT  shift, and go to state 47


State 29

    0 $accept: program $end •

    $default  accept


State 30

   42 return_type: VOID •

    $default  reduce using rule 42 (return_type)


State 31

    3 declarations: declarations declaration •

    $default  reduce using rule 3 (declarations)


State 32

    7 var_declaration: type • declaration_line SEMICOLON
   41 return_type: type •

    ID  shift, and go to state 36

    ID  [reduce using rule 41 (return_type)]

    declaration_line  go to state 37
    declaration_item  go to state 38
    declaration_term  go to state 39


State 33

    1 program: declarations subprograms •
   39 subprograms: subprograms • subprogram

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    VOID       shift, and go to state 30
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    $default  reduce using rule 1 (program)

    type         go to state 48
    ptr_type     go to state 17
    map_type     go to state 18
    list_type    go to state 19
    enum_type    go to state 20
    struct_type  go to state 21
    subprogram   go to state 49
    return_type  go to state 35


State 34

   38 subprograms: subprogram •

    $default  reduce using rule 38 (subprograms)


State 35

   40 subprogram: return_type • ID LPAREN parameters RPAREN LBRACE statements RBRACE

    ID  shift, and go to state 50


State 36

   14 declaration_term: ID •

    $default  reduce using rule 14 (declaration_term)


State 37

    7 var_declaration: type declaration_line • SEMICOLON
   11 declaration_line: declaration_line • COMMA declaration_item

    SEMICOLON  shift, and go to state 51
    COMMA      shift, and go to state 52


State 38

   10 declaration_line: declaration_item •

    $default  reduce using rule 10 (declaration_line)


State 39

   12 declaration_item: declaration_term •
   13                 | declaration_term • ASSIGNMENT initialization
   15 declaration_term: declaration_term • LBRACKET expr RBRACKET

    LBRACKET    shift, and go to state 53
    ASSIGNMENT  shift, and go to state 54

    $default  reduce using rule 12 (declaration_item)


State 40

   36 struct_vars: var_declaration •

    $default  reduce using rule 36 (struct_vars)


State 41

   35 struct_type: STRUCT LBRACE struct_vars • RBRACE
   37 struct_vars: struct_vars • var_declaration

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8
    RBRACE     shift, and go to state 55

    var_declaration  go to state 56
    type             go to state 16
    ptr_type         go to state 17
    map_type         go to state 18
    list_type        go to state 19
    enum_type        go to state 20
    struct_type      go to state 21


State 42

   33 enum_list: ID •

    $default  reduce using rule 33 (enum_list)


State 43

   32 enum_type: ENUM LBRACE enum_list • RBRACE
   34 enum_list: enum_list • COMMA ID

    RBRACE  shift, and go to state 57
    COMMA   shift, and go to state 58


State 44

   29 ptr_type: PTR ABRACKET_OPEN type • ABRACKET_CLOSE

    ABRACKET_CLOSE  shift, and go to state 59


State 45

   31 list_type: LIST ABRACKET_OPEN type • ABRACKET_CLOSE

    ABRACKET_CLOSE  shift, and go to state 60


State 46

   30 map_type: MAP ABRACKET_OPEN type • COMMA type ABRACKET_CLOSE

    COMMA  shift, and go to state 61


State 47

    9 type_declaration: TYPE ID ASSIGNMENT • type SEMICOLON

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    type         go to state 62
    ptr_type     go to state 17
    map_type     go to state 18
    list_type    go to state 19
    enum_type    go to state 20
    struct_type  go to state 21


State 48

   41 return_type: type •

    $default  reduce using rule 41 (return_type)


State 49

   39 subprograms: subprograms subprogram •

    $default  reduce using rule 39 (subprograms)


State 50

   40 subprogram: return_type ID • LPAREN parameters RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 63


State 51

    7 var_declaration: type declaration_line SEMICOLON •

    $default  reduce using rule 7 (var_declaration)


State 52

   11 declaration_line: declaration_line COMMA • declaration_item

    ID  shift, and go to state 36

    declaration_item  go to state 64
    declaration_term  go to state 39


State 53

   15 declaration_term: declaration_term LBRACKET • expr RBRACKET

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    expr             go to state 78
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 54

   13 declaration_item: declaration_term ASSIGNMENT • initialization

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    NEW      shift, and go to state 91
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    LBRACE   shift, and go to state 92
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    initialization   go to state 93
    allocation       go to state 94
    function_call    go to state 77
    expr             go to state 95
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 55

   35 struct_type: STRUCT LBRACE struct_vars RBRACE •

    $default  reduce using rule 35 (struct_type)


State 56

   37 struct_vars: struct_vars var_declaration •

    $default  reduce using rule 37 (struct_vars)


State 57

   32 enum_type: ENUM LBRACE enum_list RBRACE •

    $default  reduce using rule 32 (enum_type)


State 58

   34 enum_list: enum_list COMMA • ID

    ID  shift, and go to state 96


State 59

   29 ptr_type: PTR ABRACKET_OPEN type ABRACKET_CLOSE •

    $default  reduce using rule 29 (ptr_type)


State 60

   31 list_type: LIST ABRACKET_OPEN type ABRACKET_CLOSE •

    $default  reduce using rule 31 (list_type)


State 61

   30 map_type: MAP ABRACKET_OPEN type COMMA • type ABRACKET_CLOSE

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    type         go to state 97
    ptr_type     go to state 17
    map_type     go to state 18
    list_type    go to state 19
    enum_type    go to state 20
    struct_type  go to state 21


State 62

    9 type_declaration: TYPE ID ASSIGNMENT type • SEMICOLON

    SEMICOLON  shift, and go to state 98


State 63

   40 subprogram: return_type ID LPAREN • parameters RPAREN LBRACE statements RBRACE

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    type         go to state 99
    ptr_type     go to state 17
    map_type     go to state 18
    list_type    go to state 19
    enum_type    go to state 20
    struct_type  go to state 21
    parameters   go to state 100
    parameter    go to state 101


State 64

   11 declaration_line: declaration_line COMMA declaration_item •

    $default  reduce using rule 11 (declaration_line)


State 65

   86 function_call: ID • LPAREN RPAREN
   87              | ID • LPAREN parameters_call RPAREN
  144 element: ID •

    LPAREN  shift, and go to state 102

    $default  reduce using rule 144 (element)


State 66

  147 literal: INTEGER •

    $default  reduce using rule 147 (literal)


State 67

  149 literal: STRING •

    $default  reduce using rule 149 (literal)


State 68

  151 literal: BOOL •

    $default  reduce using rule 151 (literal)


State 69

  150 literal: REAL •

    $default  reduce using rule 150 (literal)


State 70

  148 literal: CHAR •

    $default  reduce using rule 148 (literal)


State 71

  137 unary_operator: REF •

    $default  reduce using rule 137 (unary_operator)


State 72

  138 unary_operator: VAL •

    $default  reduce using rule 138 (unary_operator)


State 73

  143 cast: LPAREN • type RPAREN element
  146 element: LPAREN • expr RPAREN

    ID         shift, and go to state 103
    PRIM_TYPE  shift, and go to state 2
    INTEGER    shift, and go to state 66
    STRING     shift, and go to state 67
    BOOL       shift, and go to state 68
    REAL       shift, and go to state 69
    CHAR       shift, and go to state 70
    REF        shift, and go to state 71
    VAL        shift, and go to state 72
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8
    LPAREN     shift, and go to state 73
    NOT        shift, and go to state 74
    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76

    type             go to state 104
    ptr_type         go to state 17
    map_type         go to state 18
    list_type        go to state 19
    enum_type        go to state 20
    struct_type      go to state 21
    function_call    go to state 77
    expr             go to state 105
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 74

  139 unary_operator: NOT •

    $default  reduce using rule 139 (unary_operator)


State 75

  135 unary_operator: PLUS •

    $default  reduce using rule 135 (unary_operator)


State 76

  136 unary_operator: MINUS •

    $default  reduce using rule 136 (unary_operator)


State 77

  141 postfix_expr: function_call •

    $default  reduce using rule 141 (postfix_expr)


State 78

   15 declaration_term: declaration_term LBRACKET expr • RBRACKET

    RBRACKET  shift, and go to state 106


State 79

  105 expr: or_expr •
  107 or_expr: or_expr • or_operator and_expr

    OR   shift, and go to state 107
    ORC  shift, and go to state 108

    $default  reduce using rule 105 (expr)

    or_operator  go to state 109


State 80

  106 or_expr: and_expr •
  111 and_expr: and_expr • and_operator eq_expr

    AND   shift, and go to state 110
    ANDC  shift, and go to state 111

    $default  reduce using rule 106 (or_expr)

    and_operator  go to state 112


State 81

  110 and_expr: eq_expr •
  115 eq_expr: eq_expr • eq_operator relational_expr

    EQUALITY    shift, and go to state 113
    DIFFERENCE  shift, and go to state 114

    $default  reduce using rule 110 (and_expr)

    eq_operator  go to state 115


State 82

  114 eq_expr: relational_expr •
  119 relational_expr: relational_expr • ineq_operator arithmetic_expr

    ABRACKET_OPEN     shift, and go to state 116
    ABRACKET_CLOSE    shift, and go to state 117
    LESS_THAN_EQUALS  shift, and go to state 118
    MORE_THAN_EQUALS  shift, and go to state 119

    $default  reduce using rule 114 (eq_expr)

    ineq_operator  go to state 120


State 83

  118 relational_expr: arithmetic_expr •
  125 arithmetic_expr: arithmetic_expr • add_operator term

    PLUS   shift, and go to state 121
    MINUS  shift, and go to state 122

    $default  reduce using rule 118 (relational_expr)

    add_operator  go to state 123


State 84

  124 arithmetic_expr: term •
  129 term: term • mult_operator prefix_expr

    TIMES  shift, and go to state 124
    SLASH  shift, and go to state 125
    MOD    shift, and go to state 126

    $default  reduce using rule 124 (arithmetic_expr)

    mult_operator  go to state 127


State 85

  128 term: prefix_expr •

    $default  reduce using rule 128 (term)


State 86

  134 prefix_expr: unary_operator • postfix_expr

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    LPAREN   shift, and go to state 73

    function_call  go to state 77
    postfix_expr   go to state 128
    cast           go to state 88
    element        go to state 89
    literal        go to state 90


State 87

  133 prefix_expr: postfix_expr •

    $default  reduce using rule 133 (prefix_expr)


State 88

  140 postfix_expr: cast •

    $default  reduce using rule 140 (postfix_expr)


State 89

  142 cast: element •

    $default  reduce using rule 142 (cast)


State 90

  145 element: literal •

    $default  reduce using rule 145 (element)


State 91

   21 allocation: NEW • type LBRACKET expr RBRACKET

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    type         go to state 129
    ptr_type     go to state 17
    map_type     go to state 18
    list_type    go to state 19
    enum_type    go to state 20
    struct_type  go to state 21


State 92

   17 initialization: LBRACE • initialization_list RBRACE

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    NEW      shift, and go to state 91
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    LBRACE   shift, and go to state 92
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    initialization       go to state 130
    initialization_list  go to state 131
    allocation           go to state 94
    function_call        go to state 77
    expr                 go to state 95
    or_expr              go to state 79
    and_expr             go to state 80
    eq_expr              go to state 81
    relational_expr      go to state 82
    arithmetic_expr      go to state 83
    term                 go to state 84
    prefix_expr          go to state 85
    unary_operator       go to state 86
    postfix_expr         go to state 87
    cast                 go to state 88
    element              go to state 89
    literal              go to state 90


State 93

   13 declaration_item: declaration_term ASSIGNMENT initialization •

    $default  reduce using rule 13 (declaration_item)


State 94

   18 initialization: allocation •

    $default  reduce using rule 18 (initialization)


State 95

   16 initialization: expr •

    $default  reduce using rule 16 (initialization)


State 96

   34 enum_list: enum_list COMMA ID •

    $default  reduce using rule 34 (enum_list)


State 97

   30 map_type: MAP ABRACKET_OPEN type COMMA type • ABRACKET_CLOSE

    ABRACKET_CLOSE  shift, and go to state 132


State 98

    9 type_declaration: TYPE ID ASSIGNMENT type SEMICOLON •

    $default  reduce using rule 9 (type_declaration)


State 99

   45 parameter: type • ID

    ID  shift, and go to state 133


State 100

   40 subprogram: return_type ID LPAREN parameters • RPAREN LBRACE statements RBRACE
   44 parameters: parameters • COMMA parameter

    RPAREN  shift, and go to state 134
    COMMA   shift, and go to state 135


State 101

   43 parameters: parameter •

    $default  reduce using rule 43 (parameters)


State 102

   86 function_call: ID LPAREN • RPAREN
   87              | ID LPAREN • parameters_call RPAREN

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    RPAREN   shift, and go to state 136
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    parameters_call  go to state 137
    expr             go to state 138
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 103

   28 type: ID •
   86 function_call: ID • LPAREN RPAREN
   87              | ID • LPAREN parameters_call RPAREN
  144 element: ID •

    LPAREN  shift, and go to state 102

    RPAREN    reduce using rule 28 (type)
    RPAREN    [reduce using rule 144 (element)]
    $default  reduce using rule 144 (element)


State 104

  143 cast: LPAREN type • RPAREN element

    RPAREN  shift, and go to state 139


State 105

  146 element: LPAREN expr • RPAREN

    RPAREN  shift, and go to state 140


State 106

   15 declaration_term: declaration_term LBRACKET expr RBRACKET •

    $default  reduce using rule 15 (declaration_term)


State 107

  108 or_operator: OR •

    $default  reduce using rule 108 (or_operator)


State 108

  109 or_operator: ORC •

    $default  reduce using rule 109 (or_operator)


State 109

  107 or_expr: or_expr or_operator • and_expr

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    and_expr         go to state 141
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 110

  112 and_operator: AND •

    $default  reduce using rule 112 (and_operator)


State 111

  113 and_operator: ANDC •

    $default  reduce using rule 113 (and_operator)


State 112

  111 and_expr: and_expr and_operator • eq_expr

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    eq_expr          go to state 142
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 113

  116 eq_operator: EQUALITY •

    $default  reduce using rule 116 (eq_operator)


State 114

  117 eq_operator: DIFFERENCE •

    $default  reduce using rule 117 (eq_operator)


State 115

  115 eq_expr: eq_expr eq_operator • relational_expr

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    relational_expr  go to state 143
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 116

  120 ineq_operator: ABRACKET_OPEN •

    $default  reduce using rule 120 (ineq_operator)


State 117

  122 ineq_operator: ABRACKET_CLOSE •

    $default  reduce using rule 122 (ineq_operator)


State 118

  123 ineq_operator: LESS_THAN_EQUALS •

    $default  reduce using rule 123 (ineq_operator)


State 119

  121 ineq_operator: MORE_THAN_EQUALS •

    $default  reduce using rule 121 (ineq_operator)


State 120

  119 relational_expr: relational_expr ineq_operator • arithmetic_expr

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    arithmetic_expr  go to state 144
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 121

  126 add_operator: PLUS •

    $default  reduce using rule 126 (add_operator)


State 122

  127 add_operator: MINUS •

    $default  reduce using rule 127 (add_operator)


State 123

  125 arithmetic_expr: arithmetic_expr add_operator • term

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call   go to state 77
    term            go to state 145
    prefix_expr     go to state 85
    unary_operator  go to state 86
    postfix_expr    go to state 87
    cast            go to state 88
    element         go to state 89
    literal         go to state 90


State 124

  130 mult_operator: TIMES •

    $default  reduce using rule 130 (mult_operator)


State 125

  131 mult_operator: SLASH •

    $default  reduce using rule 131 (mult_operator)


State 126

  132 mult_operator: MOD •

    $default  reduce using rule 132 (mult_operator)


State 127

  129 term: term mult_operator • prefix_expr

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call   go to state 77
    prefix_expr     go to state 146
    unary_operator  go to state 86
    postfix_expr    go to state 87
    cast            go to state 88
    element         go to state 89
    literal         go to state 90


State 128

  134 prefix_expr: unary_operator postfix_expr •

    $default  reduce using rule 134 (prefix_expr)


State 129

   21 allocation: NEW type • LBRACKET expr RBRACKET

    LBRACKET  shift, and go to state 147


State 130

   19 initialization_list: initialization •

    $default  reduce using rule 19 (initialization_list)


State 131

   17 initialization: LBRACE initialization_list • RBRACE
   20 initialization_list: initialization_list • COMMA initialization

    RBRACE  shift, and go to state 148
    COMMA   shift, and go to state 149


State 132

   30 map_type: MAP ABRACKET_OPEN type COMMA type ABRACKET_CLOSE •

    $default  reduce using rule 30 (map_type)


State 133

   45 parameter: type ID •

    $default  reduce using rule 45 (parameter)


State 134

   40 subprogram: return_type ID LPAREN parameters RPAREN • LBRACE statements RBRACE

    LBRACE  shift, and go to state 150


State 135

   44 parameters: parameters COMMA • parameter

    ID         shift, and go to state 1
    PRIM_TYPE  shift, and go to state 2
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    type         go to state 99
    ptr_type     go to state 17
    map_type     go to state 18
    list_type    go to state 19
    enum_type    go to state 20
    struct_type  go to state 21
    parameter    go to state 151


State 136

   86 function_call: ID LPAREN RPAREN •

    $default  reduce using rule 86 (function_call)


State 137

   87 function_call: ID LPAREN parameters_call • RPAREN
   89 parameters_call: parameters_call • COMMA expr

    RPAREN  shift, and go to state 152
    COMMA   shift, and go to state 153


State 138

   88 parameters_call: expr •

    $default  reduce using rule 88 (parameters_call)


State 139

  143 cast: LPAREN type RPAREN • element

    ID       shift, and go to state 154
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    LPAREN   shift, and go to state 155

    element  go to state 156
    literal  go to state 90


State 140

  146 element: LPAREN expr RPAREN •

    $default  reduce using rule 146 (element)


State 141

  107 or_expr: or_expr or_operator and_expr •
  111 and_expr: and_expr • and_operator eq_expr

    AND   shift, and go to state 110
    ANDC  shift, and go to state 111

    $default  reduce using rule 107 (or_expr)

    and_operator  go to state 112


State 142

  111 and_expr: and_expr and_operator eq_expr •
  115 eq_expr: eq_expr • eq_operator relational_expr

    EQUALITY    shift, and go to state 113
    DIFFERENCE  shift, and go to state 114

    $default  reduce using rule 111 (and_expr)

    eq_operator  go to state 115


State 143

  115 eq_expr: eq_expr eq_operator relational_expr •
  119 relational_expr: relational_expr • ineq_operator arithmetic_expr

    ABRACKET_OPEN     shift, and go to state 116
    ABRACKET_CLOSE    shift, and go to state 117
    LESS_THAN_EQUALS  shift, and go to state 118
    MORE_THAN_EQUALS  shift, and go to state 119

    $default  reduce using rule 115 (eq_expr)

    ineq_operator  go to state 120


State 144

  119 relational_expr: relational_expr ineq_operator arithmetic_expr •
  125 arithmetic_expr: arithmetic_expr • add_operator term

    PLUS   shift, and go to state 121
    MINUS  shift, and go to state 122

    $default  reduce using rule 119 (relational_expr)

    add_operator  go to state 123


State 145

  125 arithmetic_expr: arithmetic_expr add_operator term •
  129 term: term • mult_operator prefix_expr

    TIMES  shift, and go to state 124
    SLASH  shift, and go to state 125
    MOD    shift, and go to state 126

    $default  reduce using rule 125 (arithmetic_expr)

    mult_operator  go to state 127


State 146

  129 term: term mult_operator prefix_expr •

    $default  reduce using rule 129 (term)


State 147

   21 allocation: NEW type LBRACKET • expr RBRACKET

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    expr             go to state 157
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 148

   17 initialization: LBRACE initialization_list RBRACE •

    $default  reduce using rule 17 (initialization)


State 149

   20 initialization_list: initialization_list COMMA • initialization

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    NEW      shift, and go to state 91
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    LBRACE   shift, and go to state 92
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    initialization   go to state 158
    allocation       go to state 94
    function_call    go to state 77
    expr             go to state 95
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 150

   40 subprogram: return_type ID LPAREN parameters RPAREN LBRACE • statements RBRACE

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statements         go to state 171
    statement          go to state 172
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 151

   44 parameters: parameters COMMA parameter •

    $default  reduce using rule 44 (parameters)


State 152

   87 function_call: ID LPAREN parameters_call RPAREN •

    $default  reduce using rule 87 (function_call)


State 153

   89 parameters_call: parameters_call COMMA • expr

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    expr             go to state 183
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 154

  144 element: ID •

    $default  reduce using rule 144 (element)


State 155

  146 element: LPAREN • expr RPAREN

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    expr             go to state 105
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 156

  143 cast: LPAREN type RPAREN element •

    $default  reduce using rule 143 (cast)


State 157

   21 allocation: NEW type LBRACKET expr • RBRACKET

    RBRACKET  shift, and go to state 184


State 158

   20 initialization_list: initialization_list COMMA initialization •

    $default  reduce using rule 20 (initialization_list)


State 159

   28 type: ID •
   86 function_call: ID • LPAREN RPAREN
   87              | ID • LPAREN parameters_call RPAREN

    LPAREN  shift, and go to state 102

    $default  reduce using rule 28 (type)


State 160

   65 if: IF • LPAREN expr RPAREN LBRACE statement RBRACE else_ifs_opt else_opt

    LPAREN  shift, and go to state 185


State 161

   79 switch: SWITCH • LPAREN expr RPAREN LBRACE cases RBRACE
   80       | SWITCH • LPAREN expr RPAREN LBRACE cases default RBRACE

    LPAREN  shift, and go to state 186


State 162

   75 do_while: DO • LBRACE statements RBRACE WHILE LPAREN expr RPAREN

    LBRACE  shift, and go to state 187


State 163

   74 while: WHILE • LPAREN expr RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 188


State 164

   76 for: FOR • LPAREN for_initialization COMMA expr COMMA command RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 189


State 165

   60 jump: BREAK •

    $default  reduce using rule 60 (jump)


State 166

   59 jump: CONTINUE •

    $default  reduce using rule 59 (jump)


State 167

   62 return: RETURN • return_value

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    $default  reduce using rule 63 (return_value)

    return_value     go to state 190
    function_call    go to state 77
    expr             go to state 191
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 168

  101 deletion: DELETE • identifier_ref SEMICOLON

    ID  shift, and go to state 192

    identifier_ref  go to state 193


State 169

   48 statement: var_declaration •

    $default  reduce using rule 48 (statement)


State 170

   49 statement: const_declaration •

    $default  reduce using rule 49 (statement)


State 171

   40 subprogram: return_type ID LPAREN parameters RPAREN LBRACE statements • RBRACE
   47 statements: statements • statement

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8
    RBRACE     shift, and go to state 194

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statement          go to state 195
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 172

   46 statements: statement •

    $default  reduce using rule 46 (statements)


State 173

   50 statement: command •

    $default  reduce using rule 50 (statement)


State 174

   57 command: jump • SEMICOLON

    SEMICOLON  shift, and go to state 196


State 175

   61 jump: return •

    $default  reduce using rule 61 (jump)


State 176

   51 command: if •

    $default  reduce using rule 51 (command)


State 177

   52 command: while •

    $default  reduce using rule 52 (command)


State 178

   53 command: do_while •

    $default  reduce using rule 53 (command)


State 179

   54 command: for •

    $default  reduce using rule 54 (command)


State 180

   55 command: switch •

    $default  reduce using rule 55 (command)


State 181

   56 command: function_call • SEMICOLON

    SEMICOLON  shift, and go to state 197


State 182

   58 command: deletion •

    $default  reduce using rule 58 (command)


State 183

   89 parameters_call: parameters_call COMMA expr •

    $default  reduce using rule 89 (parameters_call)


State 184

   21 allocation: NEW type LBRACKET expr RBRACKET •

    $default  reduce using rule 21 (allocation)


State 185

   65 if: IF LPAREN • expr RPAREN LBRACE statement RBRACE else_ifs_opt else_opt

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    expr             go to state 198
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 186

   79 switch: SWITCH LPAREN • expr RPAREN LBRACE cases RBRACE
   80       | SWITCH LPAREN • expr RPAREN LBRACE cases default RBRACE

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    expr             go to state 199
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 187

   75 do_while: DO LBRACE • statements RBRACE WHILE LPAREN expr RPAREN

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statements         go to state 200
    statement          go to state 172
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 188

   74 while: WHILE LPAREN • expr RPAREN LBRACE statements RBRACE

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    expr             go to state 201
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 189

   76 for: FOR LPAREN • for_initialization COMMA expr COMMA command RPAREN LBRACE statements RBRACE

    ID         shift, and go to state 202
    PRIM_TYPE  shift, and go to state 2
    VAL        shift, and go to state 203
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    var_declaration     go to state 204
    type                go to state 16
    ptr_type            go to state 17
    map_type            go to state 18
    list_type           go to state 19
    enum_type           go to state 20
    struct_type         go to state 21
    for_initialization  go to state 205
    assignment          go to state 206
    assignable          go to state 207
    identifier_ref      go to state 208


State 190

   62 return: RETURN return_value •

    $default  reduce using rule 62 (return)


State 191

   64 return_value: expr •

    $default  reduce using rule 64 (return_value)


State 192

  102 identifier_ref: ID •

    $default  reduce using rule 102 (identifier_ref)


State 193

  101 deletion: DELETE identifier_ref • SEMICOLON
  103 identifier_ref: identifier_ref • LBRACKET expr RBRACKET
  104               | identifier_ref • DOT ID

    LBRACKET   shift, and go to state 209
    SEMICOLON  shift, and go to state 210
    DOT        shift, and go to state 211


State 194

   40 subprogram: return_type ID LPAREN parameters RPAREN LBRACE statements RBRACE •

    $default  reduce using rule 40 (subprogram)


State 195

   47 statements: statements statement •

    $default  reduce using rule 47 (statements)


State 196

   57 command: jump SEMICOLON •

    $default  reduce using rule 57 (command)


State 197

   56 command: function_call SEMICOLON •

    $default  reduce using rule 56 (command)


State 198

   65 if: IF LPAREN expr • RPAREN LBRACE statement RBRACE else_ifs_opt else_opt

    RPAREN  shift, and go to state 212


State 199

   79 switch: SWITCH LPAREN expr • RPAREN LBRACE cases RBRACE
   80       | SWITCH LPAREN expr • RPAREN LBRACE cases default RBRACE

    RPAREN  shift, and go to state 213


State 200

   47 statements: statements • statement
   75 do_while: DO LBRACE statements • RBRACE WHILE LPAREN expr RPAREN

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8
    RBRACE     shift, and go to state 214

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statement          go to state 195
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 201

   74 while: WHILE LPAREN expr • RPAREN LBRACE statements RBRACE

    RPAREN  shift, and go to state 215


State 202

   28 type: ID •
  102 identifier_ref: ID •

    ID        reduce using rule 28 (type)
    $default  reduce using rule 102 (identifier_ref)


State 203

   92 assignable: VAL • postfix_expr

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    LPAREN   shift, and go to state 73

    function_call  go to state 77
    postfix_expr   go to state 216
    cast           go to state 88
    element        go to state 89
    literal        go to state 90


State 204

   78 for_initialization: var_declaration •

    $default  reduce using rule 78 (for_initialization)


State 205

   76 for: FOR LPAREN for_initialization • COMMA expr COMMA command RPAREN LBRACE statements RBRACE

    COMMA  shift, and go to state 217


State 206

   77 for_initialization: assignment •

    $default  reduce using rule 77 (for_initialization)


State 207

   90 assignment: assignable • assignment_operator assignment_expr SEMICOLON

    ASSIGNMENT      shift, and go to state 218
    ASSIGNMENT_MUL  shift, and go to state 219
    ASSIGNMENT_DIV  shift, and go to state 220
    ASSIGNMENT_MOD  shift, and go to state 221
    ASSIGNMENT_ADD  shift, and go to state 222
    ASSIGNMENT_SUB  shift, and go to state 223

    assignment_operator  go to state 224


State 208

   91 assignable: identifier_ref •
  103 identifier_ref: identifier_ref • LBRACKET expr RBRACKET
  104               | identifier_ref • DOT ID

    LBRACKET  shift, and go to state 209
    DOT       shift, and go to state 211

    $default  reduce using rule 91 (assignable)


State 209

  103 identifier_ref: identifier_ref LBRACKET • expr RBRACKET

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    expr             go to state 225
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 210

  101 deletion: DELETE identifier_ref SEMICOLON •

    $default  reduce using rule 101 (deletion)


State 211

  104 identifier_ref: identifier_ref DOT • ID

    ID  shift, and go to state 226


State 212

   65 if: IF LPAREN expr RPAREN • LBRACE statement RBRACE else_ifs_opt else_opt

    LBRACE  shift, and go to state 227


State 213

   79 switch: SWITCH LPAREN expr RPAREN • LBRACE cases RBRACE
   80       | SWITCH LPAREN expr RPAREN • LBRACE cases default RBRACE

    LBRACE  shift, and go to state 228


State 214

   75 do_while: DO LBRACE statements RBRACE • WHILE LPAREN expr RPAREN

    WHILE  shift, and go to state 229


State 215

   74 while: WHILE LPAREN expr RPAREN • LBRACE statements RBRACE

    LBRACE  shift, and go to state 230


State 216

   92 assignable: VAL postfix_expr •

    $default  reduce using rule 92 (assignable)


State 217

   76 for: FOR LPAREN for_initialization COMMA • expr COMMA command RPAREN LBRACE statements RBRACE

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    expr             go to state 231
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 218

   93 assignment_operator: ASSIGNMENT •

    $default  reduce using rule 93 (assignment_operator)


State 219

   94 assignment_operator: ASSIGNMENT_MUL •

    $default  reduce using rule 94 (assignment_operator)


State 220

   95 assignment_operator: ASSIGNMENT_DIV •

    $default  reduce using rule 95 (assignment_operator)


State 221

   96 assignment_operator: ASSIGNMENT_MOD •

    $default  reduce using rule 96 (assignment_operator)


State 222

   97 assignment_operator: ASSIGNMENT_ADD •

    $default  reduce using rule 97 (assignment_operator)


State 223

   98 assignment_operator: ASSIGNMENT_SUB •

    $default  reduce using rule 98 (assignment_operator)


State 224

   90 assignment: assignable assignment_operator • assignment_expr SEMICOLON

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    NEW      shift, and go to state 91
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    allocation       go to state 232
    function_call    go to state 77
    assignment_expr  go to state 233
    expr             go to state 234
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 225

  103 identifier_ref: identifier_ref LBRACKET expr • RBRACKET

    RBRACKET  shift, and go to state 235


State 226

  104 identifier_ref: identifier_ref DOT ID •

    $default  reduce using rule 104 (identifier_ref)


State 227

   65 if: IF LPAREN expr RPAREN LBRACE • statement RBRACE else_ifs_opt else_opt

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statement          go to state 236
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 228

   79 switch: SWITCH LPAREN expr RPAREN LBRACE • cases RBRACE
   80       | SWITCH LPAREN expr RPAREN LBRACE • cases default RBRACE

    CASE  shift, and go to state 237

    cases  go to state 238
    case   go to state 239


State 229

   75 do_while: DO LBRACE statements RBRACE WHILE • LPAREN expr RPAREN

    LPAREN  shift, and go to state 240


State 230

   74 while: WHILE LPAREN expr RPAREN LBRACE • statements RBRACE

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statements         go to state 241
    statement          go to state 172
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 231

   76 for: FOR LPAREN for_initialization COMMA expr • COMMA command RPAREN LBRACE statements RBRACE

    COMMA  shift, and go to state 242


State 232

  100 assignment_expr: allocation •

    $default  reduce using rule 100 (assignment_expr)


State 233

   90 assignment: assignable assignment_operator assignment_expr • SEMICOLON

    SEMICOLON  shift, and go to state 243


State 234

   99 assignment_expr: expr •

    $default  reduce using rule 99 (assignment_expr)


State 235

  103 identifier_ref: identifier_ref LBRACKET expr RBRACKET •

    $default  reduce using rule 103 (identifier_ref)


State 236

   65 if: IF LPAREN expr RPAREN LBRACE statement • RBRACE else_ifs_opt else_opt

    RBRACE  shift, and go to state 244


State 237

   83 case: CASE • case_item

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    case_item        go to state 245
    function_call    go to state 77
    expr             go to state 246
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 238

   79 switch: SWITCH LPAREN expr RPAREN LBRACE cases • RBRACE
   80       | SWITCH LPAREN expr RPAREN LBRACE cases • default RBRACE
   82 cases: cases • case

    CASE     shift, and go to state 237
    DEFAULT  shift, and go to state 247
    RBRACE   shift, and go to state 248

    case     go to state 249
    default  go to state 250


State 239

   81 cases: case •

    $default  reduce using rule 81 (cases)


State 240

   75 do_while: DO LBRACE statements RBRACE WHILE LPAREN • expr RPAREN

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    expr             go to state 251
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 241

   47 statements: statements • statement
   74 while: WHILE LPAREN expr RPAREN LBRACE statements • RBRACE

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8
    RBRACE     shift, and go to state 252

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statement          go to state 195
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 242

   76 for: FOR LPAREN for_initialization COMMA expr COMMA • command RPAREN LBRACE statements RBRACE

    ID        shift, and go to state 253
    IF        shift, and go to state 160
    SWITCH    shift, and go to state 161
    DO        shift, and go to state 162
    WHILE     shift, and go to state 163
    FOR       shift, and go to state 164
    BREAK     shift, and go to state 165
    CONTINUE  shift, and go to state 166
    RETURN    shift, and go to state 167
    DELETE    shift, and go to state 168

    command        go to state 254
    jump           go to state 174
    return         go to state 175
    if             go to state 176
    while          go to state 177
    do_while       go to state 178
    for            go to state 179
    switch         go to state 180
    function_call  go to state 181
    deletion       go to state 182


State 243

   90 assignment: assignable assignment_operator assignment_expr SEMICOLON •

    $default  reduce using rule 90 (assignment)


State 244

   65 if: IF LPAREN expr RPAREN LBRACE statement RBRACE • else_ifs_opt else_opt

    ELSEIF  shift, and go to state 255

    $default  reduce using rule 66 (else_ifs_opt)

    else_ifs_opt  go to state 256
    else_ifs      go to state 257
    else_if       go to state 258


State 245

   83 case: CASE case_item •

    $default  reduce using rule 83 (case)


State 246

   85 case_item: expr • COLON statements

    COLON  shift, and go to state 259


State 247

   84 default: DEFAULT • case_item

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    case_item        go to state 260
    function_call    go to state 77
    expr             go to state 246
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 248

   79 switch: SWITCH LPAREN expr RPAREN LBRACE cases RBRACE •

    $default  reduce using rule 79 (switch)


State 249

   82 cases: cases case •

    $default  reduce using rule 82 (cases)


State 250

   80 switch: SWITCH LPAREN expr RPAREN LBRACE cases default • RBRACE

    RBRACE  shift, and go to state 261


State 251

   75 do_while: DO LBRACE statements RBRACE WHILE LPAREN expr • RPAREN

    RPAREN  shift, and go to state 262


State 252

   74 while: WHILE LPAREN expr RPAREN LBRACE statements RBRACE •

    $default  reduce using rule 74 (while)


State 253

   86 function_call: ID • LPAREN RPAREN
   87              | ID • LPAREN parameters_call RPAREN

    LPAREN  shift, and go to state 102


State 254

   76 for: FOR LPAREN for_initialization COMMA expr COMMA command • RPAREN LBRACE statements RBRACE

    RPAREN  shift, and go to state 263


State 255

   70 else_if: ELSEIF • LPAREN expr RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 264


State 256

   65 if: IF LPAREN expr RPAREN LBRACE statement RBRACE else_ifs_opt • else_opt

    ELSE  shift, and go to state 265

    $default  reduce using rule 71 (else_opt)

    else_opt  go to state 266
    else      go to state 267


State 257

   67 else_ifs_opt: else_ifs •
   69 else_ifs: else_ifs • else_if

    ELSEIF  shift, and go to state 255

    $default  reduce using rule 67 (else_ifs_opt)

    else_if  go to state 268


State 258

   68 else_ifs: else_if •

    $default  reduce using rule 68 (else_ifs)


State 259

   85 case_item: expr COLON • statements

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statements         go to state 269
    statement          go to state 172
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 260

   84 default: DEFAULT case_item •

    $default  reduce using rule 84 (default)


State 261

   80 switch: SWITCH LPAREN expr RPAREN LBRACE cases default RBRACE •

    $default  reduce using rule 80 (switch)


State 262

   75 do_while: DO LBRACE statements RBRACE WHILE LPAREN expr RPAREN •

    $default  reduce using rule 75 (do_while)


State 263

   76 for: FOR LPAREN for_initialization COMMA expr COMMA command RPAREN • LBRACE statements RBRACE

    LBRACE  shift, and go to state 270


State 264

   70 else_if: ELSEIF LPAREN • expr RPAREN LBRACE statements RBRACE

    ID       shift, and go to state 65
    INTEGER  shift, and go to state 66
    STRING   shift, and go to state 67
    BOOL     shift, and go to state 68
    REAL     shift, and go to state 69
    CHAR     shift, and go to state 70
    REF      shift, and go to state 71
    VAL      shift, and go to state 72
    LPAREN   shift, and go to state 73
    NOT      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76

    function_call    go to state 77
    expr             go to state 271
    or_expr          go to state 79
    and_expr         go to state 80
    eq_expr          go to state 81
    relational_expr  go to state 82
    arithmetic_expr  go to state 83
    term             go to state 84
    prefix_expr      go to state 85
    unary_operator   go to state 86
    postfix_expr     go to state 87
    cast             go to state 88
    element          go to state 89
    literal          go to state 90


State 265

   73 else: ELSE • LBRACE statements RBRACE

    LBRACE  shift, and go to state 272


State 266

   65 if: IF LPAREN expr RPAREN LBRACE statement RBRACE else_ifs_opt else_opt •

    $default  reduce using rule 65 (if)


State 267

   72 else_opt: else •

    $default  reduce using rule 72 (else_opt)


State 268

   69 else_ifs: else_ifs else_if •

    $default  reduce using rule 69 (else_ifs)


State 269

   47 statements: statements • statement
   85 case_item: expr COLON statements •

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    $default  reduce using rule 85 (case_item)

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statement          go to state 195
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 270

   76 for: FOR LPAREN for_initialization COMMA expr COMMA command RPAREN LBRACE • statements RBRACE

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statements         go to state 273
    statement          go to state 172
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 271

   70 else_if: ELSEIF LPAREN expr • RPAREN LBRACE statements RBRACE

    RPAREN  shift, and go to state 274


State 272

   73 else: ELSE LBRACE • statements RBRACE

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statements         go to state 275
    statement          go to state 172
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 273

   47 statements: statements • statement
   76 for: FOR LPAREN for_initialization COMMA expr COMMA command RPAREN LBRACE statements • RBRACE

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8
    RBRACE     shift, and go to state 276

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statement          go to state 195
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 274

   70 else_if: ELSEIF LPAREN expr RPAREN • LBRACE statements RBRACE

    LBRACE  shift, and go to state 277


State 275

   47 statements: statements • statement
   73 else: ELSE LBRACE statements • RBRACE

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8
    RBRACE     shift, and go to state 278

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statement          go to state 195
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 276

   76 for: FOR LPAREN for_initialization COMMA expr COMMA command RPAREN LBRACE statements RBRACE •

    $default  reduce using rule 76 (for)


State 277

   70 else_if: ELSEIF LPAREN expr RPAREN LBRACE • statements RBRACE

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statements         go to state 279
    statement          go to state 172
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 278

   73 else: ELSE LBRACE statements RBRACE •

    $default  reduce using rule 73 (else)


State 279

   47 statements: statements • statement
   70 else_if: ELSEIF LPAREN expr RPAREN LBRACE statements • RBRACE

    ID         shift, and go to state 159
    PRIM_TYPE  shift, and go to state 2
    IF         shift, and go to state 160
    SWITCH     shift, and go to state 161
    DO         shift, and go to state 162
    WHILE      shift, and go to state 163
    FOR        shift, and go to state 164
    BREAK      shift, and go to state 165
    CONTINUE   shift, and go to state 166
    RETURN     shift, and go to state 167
    DELETE     shift, and go to state 168
    CONST      shift, and go to state 3
    STRUCT     shift, and go to state 4
    ENUM       shift, and go to state 5
    PTR        shift, and go to state 6
    LIST       shift, and go to state 7
    MAP        shift, and go to state 8
    RBRACE     shift, and go to state 280

    var_declaration    go to state 169
    const_declaration  go to state 170
    type               go to state 16
    ptr_type           go to state 17
    map_type           go to state 18
    list_type          go to state 19
    enum_type          go to state 20
    struct_type        go to state 21
    statement          go to state 195
    command            go to state 173
    jump               go to state 174
    return             go to state 175
    if                 go to state 176
    while              go to state 177
    do_while           go to state 178
    for                go to state 179
    switch             go to state 180
    function_call      go to state 181
    deletion           go to state 182


State 280

   70 else_if: ELSEIF LPAREN expr RPAREN LBRACE statements RBRACE •

    $default  reduce using rule 70 (else_if)
